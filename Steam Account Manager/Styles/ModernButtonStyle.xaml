<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks">
    
    <Style x:Key="ModernOutlineButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource add_button_background}"/>
        <Setter Property="Foreground" Value="{DynamicResource default_foreground}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Width" Value="125"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="border" Background="{TemplateBinding Background}"
                                CornerRadius="15" BorderThickness="1"  BorderBrush="Transparent"
                                Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                             To="{DynamicResource second_main_color}" Duration="0:0:0.8" AutoReverse="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Effect" Value="{StaticResource glow}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource second_main_brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernDefaultButton" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{DynamicResource default_foreground}"/>
        <Setter Property="Background" Value="{DynamicResource first_main_brush}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Padding" Value="10 0 10 0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid  >
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="5"/>
                        <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"
                                         />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation  Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="{DynamicResource second_main_color}" Duration="0:0:0.3"/>
                                        <ThicknessAnimation  Storyboard.TargetName="border"  Storyboard.TargetProperty="Margin" To="1.5"  Duration="0:0:0.3"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="{DynamicResource first_main_color}" Duration="0:0:0.3"/>
                                        <ThicknessAnimation Storyboard.TargetName="border"  Storyboard.TargetProperty="Margin" To="0"  Duration="0:0:0.3"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter TargetName="border" Property="Effect" Value="{DynamicResource glow}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernColoredButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ModernDefaultButton}">
        <Setter Property="Background" Value="{DynamicResource rc_button_back}"/>
        <Setter Property="Foreground" Value="{DynamicResource default_secundary_foreground}"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid  >
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="5"/>
                        <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"
                                         />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="border"  Storyboard.TargetProperty="Margin" To="1.5"  Duration="0:0:0.3"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal">
                                    <Storyboard>

                                        <ThicknessAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="Margin" To="0"  Duration="0:0:0.3"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter TargetName="border" Property="Effect" Value="{DynamicResource glow}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernMenuRadioButton" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="{DynamicResource menu_button_background}"/>
        <Setter Property="Foreground" Value="{DynamicResource menu_button_text}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="35" />
        <Setter Property="Margin" Value="15 3" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid Background="Transparent">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="7" Margin="0 0 170 0"/>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0:0:0.4" Storyboard.TargetName="border" 
                                                                    Storyboard.TargetProperty="(Border.Margin)"
                                                               From="0 0 170 0"  To="0 0 0 0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="#fff"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="Unchecked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation Duration="0:0:0.4" Storyboard.TargetName="border" 
                                                                    Storyboard.TargetProperty="(Border.Margin)"
                                                               From="0 0 0 0"  To="0 0 170 0"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernServiceButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource top_service_buttons}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="20" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="20" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="50">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource adv_service_buttons_isMouseOver}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernSpinButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ModernServiceButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="50"
                                                RenderTransformOrigin="0.5 0.5">
                        <Border.RenderTransform>
                            <RotateTransform x:Name="SpinAngle" Angle="0"/>
                        </Border.RenderTransform>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SpinAngle"
                                                                         Storyboard.TargetProperty="Angle"
                                                                         To="180" Duration="0:0:0.7">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SpinAngle"
                                                                         Storyboard.TargetProperty="Angle"
                                                                         To="0" Duration="0:0:0.7">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ModernCheckbox" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource first_main_brush}"/>
        <Setter Property="Foreground" Value="{DynamicResource main_text_color}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Transparent" CornerRadius="6">
                        <Icon:PackIconMaterial x:Name="Icon" Foreground="{TemplateBinding Foreground}" Kind="Check" VerticalAlignment="Center"
                                                       HorizontalAlignment="Center" Visibility="Visible" Width="0"/>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Icon"
                                                            Storyboard.TargetProperty="Width"
                                                            To="13"
                                                            Duration="0:0:0.3"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource second_main_brush}"/>
                            <Setter TargetName="border" Property="Effect" Value="{StaticResource glow}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="Visibility" Value="Visible" />
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource second_main_brush}"/>
                        </Trigger>

                        <EventTrigger RoutedEvent="Unchecked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Icon"
                                                            Storyboard.TargetProperty="Width"
                                                            To="0"
                                                            Duration="0:0:0.3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernSwitchToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource first_main_brush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource first_main_brush}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="85"/>
        <Setter Property="Margin" Value="0 0 100 0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="7" 
                                    Height="16" Margin="10 0 0 0"
                                    Width="40" HorizontalAlignment="Left"
                                    VerticalAlignment="Center" >
                        </Border>
                        <Ellipse x:Name="Ellipse" Height="25" Width="25"
                                     HorizontalAlignment="Left" VerticalAlignment="Center"
                                     Fill="{DynamicResource default_foreground}"
                                     Stroke="{TemplateBinding BorderBrush}"
                                     StrokeThickness="5"/>
                        <TextBlock x:Name="Text" Foreground="White" FontSize="14"
                                       Margin="60 0 0 0" Text="OFF" FontFamily="Cascadia Code"
                                       VerticalAlignment="Center" Opacity="0"/>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="30 0 0 0"
                                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="Text"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0" To="0.2" AutoReverse="True"
                                                         Duration="0:0:0.7"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Unchecked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="0 0 0 0"
                                                            Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetName="Text"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0" To="0.2" AutoReverse="True"
                                                         Duration="0:0:0.7"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Ellipse" Property="Fill" Value="White"/>
                            <Setter TargetName="Ellipse" Property="Stroke" Value="{DynamicResource second_main_brush}"/>
                            <Setter TargetName="Text" Property="Text" Value="ON"/>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource second_main_brush}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Effect" Value="{StaticResource glow}"/>
                            <Setter TargetName="Ellipse" Property="Effect" Value="{StaticResource glow}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernCopyButton" TargetType="Button" BasedOn="{StaticResource TemplateBorderButton}">
        <Setter Property="Width" Value="23"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="Margin" Value="5 0 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{DynamicResource adv_copy_button}" BorderThickness="0" CornerRadius="4">
                        <Icon:PackIconMaterial x:Name="copyIco" Kind="ContentCopy" Foreground="white" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                       Width="15" Height="15"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard  RepeatBehavior="2x">
                                        <DoubleAnimation Storyboard.TargetName="copyIco"
                                                             Storyboard.TargetProperty="Height" AutoReverse="True"
                                                             To="18" Duration="0:0:0.3"/>
                                        <DoubleAnimation Storyboard.TargetName="copyIco"
                                                             Storyboard.TargetProperty="Width" AutoReverse="True"
                                                             To="18" Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers></Style.Triggers>
    </Style>

    <Style x:Key="animatedRefresh" TargetType="{x:Type Button}" BasedOn="{StaticResource ModernServiceButton}">
        <Setter Property="Width" Value="13"/>
        <Setter Property="Height" Value="13"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent">
                        <Icon:PackIconMaterial x:Name="refreshConfs" Kind="Refresh" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                                                   VerticalAlignment="Center" HorizontalAlignment="Center">
                        </Icon:PackIconMaterial>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard  RepeatBehavior="2x">
                                        <DoubleAnimation Storyboard.TargetName="refreshConfs"
                                                             Storyboard.TargetProperty="RotationAngle"
                                                             From="0" To="360" Duration="0:0:0.7"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernCircleRadioButton" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource TemplateGlowRadioButton}">
        <Setter Property="Background" Value="{DynamicResource second_main_brush}"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border CornerRadius="50" Background="{TemplateBinding Background}" Height="{TemplateBinding Height}"
                                Width="{TemplateBinding Width}" >
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Effect" Value="{StaticResource glow}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ErrorAlert" TargetType="Button" BasedOn="{StaticResource ModernServiceButton}">
        <Setter Property="Foreground" Value="#D32F2F" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#F44336" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>