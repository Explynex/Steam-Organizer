<Application x:Class="Steam_Account_Manager.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:viewModel="clr-namespace:Steam_Account_Manager.ViewModels"
             xmlns:view="clr-namespace:Steam_Account_Manager.ViewModels.View"
             xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:converters="clr-namespace:Steam_Account_Manager.Infrastructure.Converters">
    <Application.Resources>
        <ResourceDictionary>
            
            <ResourceDictionary.MergedDictionaries>

                <ResourceDictionary Source="Themes/ScrollBarStyle.xaml"/>

                <ResourceDictionary Source="Themes/ProgressBarStyle.xaml"/>

                <ResourceDictionary Source="Themes/PasswordboxTheme.xaml"/>

                <ResourceDictionary Source="Themes/ComboBoxStyle.xaml"/>

                <ResourceDictionary Source="Themes/ListBoxStyle.xaml"/>

                <ResourceDictionary Source="Themes/DataGridStyle.xaml"/>

                <ResourceDictionary Source="Themes/Buttons.xaml"/>

                <ResourceDictionary Source="Themes/ColorSchemes/Dark.xaml"/>

                <ResourceDictionary Source="Locale/lang.en-US.xaml" />
                

            </ResourceDictionary.MergedDictionaries>

            <converters:InverseBoolConverter x:Key="BoolInverted"/>
            <converters:BooleanToVisibilityConverter x:Key="BoolToVis"/>
            <converters:MsgViewToBool x:Key="MsgViewToBool"/>
            <converters:BooleanToVisibilityConverter x:Key="BoolToVisInverted"
                                                     True="Collapsed"
                                                     False="Visible"/>


            <!--#region Styles -->
            <Style x:Key="menuButtonIcon" TargetType="Icon:PackIconMaterial">
                <Setter Property="Margin" Value="20 2 20 0" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Width" Value="15" />
                <Setter Property="Height" Value="15" />
            </Style>

            <Style x:Key="TextBlockDisabled" TargetType="TextBlock">
                <Setter Property="Text" Value="Disabled"/>
                <Setter Property="FontSize" Value="14"/>
            </Style>

            <Style x:Key="addTextBox" TargetType="TextBox">
                <Setter Property="Background" Value="{DynamicResource background_border_color}"/>
                <Setter Property="Foreground" Value="{DynamicResource second_text_color}"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="BorderThickness" Value="0 0 0 0"/>
                <Setter Property="Width" Value="190"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="MaxLength" Value="50"/>
                <Setter Property="Margin" Value="6 0 0 0"/>
            </Style>

            <Style x:Key="borderAddTextBox" TargetType="Border">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Width" Value="230"/>
                <Setter Property="Height" Value="35"/>
                <Setter Property="BorderThickness" Value="0 0 0 1"/>
                <Setter Property="BorderBrush" Value="#b0b9c6"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource settings_buttons_isMouseOver}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="opacityBox" TargetType="TextBox">
                <Setter Property="Background" Value="{DynamicResource adv_borders_background}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="CaretBrush" Value="{DynamicResource atv_rectangles_shadow}"/>
                <Setter Property="Foreground" Value="{DynamicResource default_foreground}"/>
                <Setter Property="Padding" Value="5 4"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Grid>
                                <TextBlock Text="{TemplateBinding  Property=Uid}" Margin="4 -16 0 0" FontSize="11" Foreground="{TemplateBinding Foreground}"/>
                                <Border Background="{TemplateBinding Background}" CornerRadius="5" Opacity="0.6" SnapsToDevicePixels="True" />
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="settingTextBlock" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource first_settings_text}"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Margin" Value="5 0 0 0"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
            </Style>

            <Style x:Key="gridButtonIcon" TargetType="Icon:PackIconMaterial">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Width" Value="15" />
                <Setter Property="Height" Value="15" />
            </Style>

            <Style x:Key="settings_description" TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Foreground" Value="{DynamicResource sub_accounttab_text}"/>
                <Setter Property="FontWeight"  Value="Medium"/>
            </Style>

            <Style x:Key="settings_data_box" TargetType="TextBox">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="CaretBrush" Value="{DynamicResource atv_rectangles_shadow}"/>
                <Setter Property="Foreground" Value="{DynamicResource default_foreground}"/>
                <Setter Property="IsReadOnly" Value="True"/>
            </Style>

            <Style x:Key="data_description" TargetType="TextBlock">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="5 0 0 0"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="Foreground" Value="{DynamicResource default_foreground}"/>
            </Style>

            <Style x:Key="expandNotificationBorder" TargetType="{x:Type Border}">
                <Setter Property="Width" Value="0"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" Value="True">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Width"
                                                 From="0" To="245" Duration="0:0:0.4"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Width"
                                                 From="245" To="0" Duration="0:0:0.6"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.ExitActions>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <!--#endregion-->


            <!-- Gradients -->
            <LinearGradientBrush x:Key="RedGrad">
                <GradientStop Color="#A20303" Offset="0.0" />
                <GradientStop Color="OrangeRed" Offset="0.25" />
                <GradientStop Color="OrangeRed" Offset="0.75" />
                <GradientStop Color="#A20303" Offset="1.0" />
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="AcidGrad">
                <GradientStop Color="Green" Offset="0.0" />
                <GradientStop Color="GreenYellow" Offset="0.25" />
                <GradientStop Color="LawnGreen" Offset="0.75" />
                <GradientStop Color="Green" Offset="1.0" />
            </LinearGradientBrush>


            <DataTemplate DataType="{x:Type viewModel:AccountsViewModel}">
                <view:AccountsView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModel:SettingsViewModel}">
                <view:SettingsView/>
            </DataTemplate>
            

        </ResourceDictionary>
    </Application.Resources>
</Application>
