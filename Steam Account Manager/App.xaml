<Application x:Class="Steam_Account_Manager.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:local="clr-namespace:Steam_Account_Manager"
             xmlns:viewModel="clr-namespace:Steam_Account_Manager.ViewModels"
             xmlns:view="clr-namespace:Steam_Account_Manager.ViewModels.View">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>

                <ResourceDictionary Source="Themes/PasswordboxTheme.xaml"/>

                <ResourceDictionary Source="Themes/ColorSchemes/Dark.xaml"/>

                <ResourceDictionary Source="Locale/lang.en-US.xaml" />

            </ResourceDictionary.MergedDictionaries>
            
            <!--#region Styles-->
            <Style x:Key="topButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="#b0b9c6" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Height" Value="30" />
                <Setter Property="Width" Value="30" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="50">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#433793" />
                        <Setter Property="Foreground" Value="#ffffff"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="menuButton" TargetType="RadioButton">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="#D0C0FF" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Height" Value="35" />
                <Setter Property="Margin" Value="15 3" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Border Background="{TemplateBinding Background}" CornerRadius="7">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background" Value="#7B5CD6"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="logoutButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="#D0C0FF" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Height" Value="35" />
                <Setter Property="Margin" Value="15 3" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="7">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#7B5CD6"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="serviceButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="#b0b9c6" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Height" Value="30" />
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Width" Value="30" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="50">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="#ffffff" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="menuButtonIcon" TargetType="Icon:PackIconMaterial">
                <Setter Property="Margin" Value="20 2 20 0" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Width" Value="15" />
                <Setter Property="Height" Value="15" />
            </Style>


            <Style x:Key="TextBlockDisabled" TargetType="TextBlock">
                <Setter Property="Text" Value="Disabled"/>
                <Setter Property="FontSize" Value="14"/>
            </Style>

            <Style x:Key="settingsButton" TargetType="ToggleButton">
                <Setter Property="Background" Value="#FF181B28"/>
                <Setter Property="Foreground" Value="Transparent"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Width" Value="80"/>
                <Setter Property="Height" Value="35"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border Background="{TemplateBinding Background}" CornerRadius="5">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter Property="Background" Value="#433793"/>
                        <Setter Property="Foreground" Value="#ffffff"/>
                        <Setter Property="Content" Value="Enabled">
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="false">
                        <Setter Property="Background" Value="#FF181B28"/>
                        <Setter Property="Foreground" Value="#b0b9c6"/>
                        <Setter Property="Content" Value="Disabled"/>
                    </Trigger>

                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#433793"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>

                </Style.Triggers>
            </Style>

            <Style x:Key="addTextBox" TargetType="TextBox">
                <Setter Property="Background" Value="#232338"/>
                <Setter Property="Foreground" Value="#b0b9c6"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="BorderThickness" Value="0 0 0 0"/>
                <Setter Property="Width" Value="190"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="MaxLength" Value="50"/>
                <Setter Property="Margin" Value="6 0 0 0"/>
            </Style>

            <Style x:Key="borderAddTextBox" TargetType="Border">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Width" Value="230"/>
                <Setter Property="Height" Value="35"/>
                <Setter Property="BorderThickness" Value="0 0 0 1"/>
                <Setter Property="BorderBrush" Value="#b0b9c6"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="#623ed0"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="saveAccontButton" TargetType="Button">
                <Setter Property="Background" Value="#FF181B28"/>
                <Setter Property="Foreground" Value="#b0b9c6"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Width" Value="80"/>
                <Setter Property="Height" Value="35"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="5">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#433793"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>

                </Style.Triggers>
            </Style>

            <Style x:Key="themeButton" TargetType="RadioButton">
                <Setter Property="Background" Value="#FF181B28"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Width" Value="80"/>
                <Setter Property="Height" Value="35"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Border Background="{TemplateBinding Background}" CornerRadius="5">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter Property="Background" Value="#433793"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="false">
                        <Setter Property="Background" Value="#FF181B28"/>
                        <Setter Property="Foreground" Value="#b0b9c6"/>
                    </Trigger>


                </Style.Triggers>
            </Style>

            <Style x:Key="settingTextBlock" TargetType="TextBlock">
                <Setter Property="Foreground" Value="#b0b9c6"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Margin" Value="5 0 0 0"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
            </Style>

            <Style x:Key="addButton" TargetType="Button">
                <Setter Property="Background" Value="#FF181B28"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Width" Value="150"/>
                <Setter Property="Height" Value="35"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Margin" Value="0 0 0 0"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Grid.Row" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="20">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Background" Value="#433793"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="tabButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="#121518" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Height" Value="45" />
                <Setter Property="Width" Value="70" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderThickness="0 0 0 1" BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="#784FF2" />
                    </Trigger>
                </Style.Triggers>
            </Style>



            <Style x:Key="loginButton" TargetType="Button">
                <Setter Property="Width" Value="40"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Foreground" Value="#71D66F"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="SpringGreen"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="gridEditButton" TargetType="Button">
                <Setter Property="Background" Value="#512DA8" />
                <Setter Property="BorderBrush" Value="#4A148C" />
                <Setter Property="Foreground" Value="#ffffff" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Padding="5" BorderThickness="1" CornerRadius="5">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#673AB7" />
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="gridRemoveButton" TargetType="Button" BasedOn="{StaticResource gridEditButton}">
                <Setter Property="Background" Value="#D32F2F" />
                <Setter Property="BorderBrush" Value="#B71C1C" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#F44336" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="gridNoteButton" TargetType="Button" BasedOn="{StaticResource gridEditButton}">
                <Setter Property="Background" Value="#EBAD03" />
                <Setter Property="BorderBrush" Value="#CA9910" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#F5C803" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="confirmationYesButton" TargetType="Button" BasedOn="{StaticResource gridEditButton}">
                <Setter Property="Background" Value="#71D66F" />
                <Setter Property="BorderBrush" Value="#82E249" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Padding="5" BorderThickness="1" CornerRadius="100">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="SpringGreen" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="confirmationNoButton" TargetType="Button" BasedOn="{StaticResource confirmationYesButton}">
                <Setter Property="Background" Value="#D32F2F" />
                <Setter Property="BorderBrush" Value="#B71C1C" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#F44336" />
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="gridButtonIcon" TargetType="Icon:PackIconMaterial">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Width" Value="15" />
                <Setter Property="Height" Value="15" />
            </Style>


            <!--#region ScorllBar Style-->
            <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border x:Name="Border" Margin="1" CornerRadius="2" BorderThickness="1" Background="#374270" BorderBrush="Black">
                                <Path x:Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{Binding Content,RelativeSource={RelativeSource TemplatedParent}}" >
                                    <Path.Fill>
                                        <SolidColorBrush Color="#5F76F6"/>
                                    </Path.Fill>
                                </Path>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Background="Transparent" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border CornerRadius="3" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Width" Value="10" />
                <Setter Property="Margin" Value="5 0 0 7"/>
                <Setter Property="Height" Value="auto" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid>
                                <Border x:Name="ThumbBorder" Grid.RowSpan="2" CornerRadius="5" Background="#FF181B28" />
                                <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" Background="#433793"/>

                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                                    </Track.IncreaseRepeatButton>
                                </Track>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="ThumbBorder" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>
            
            <!--#endregion-->

            <DataTemplate DataType="{x:Type viewModel:AccountsViewModel}">
                <view:AccountsView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModel:SettingsViewModel}">
                <view:SettingsView/>
            </DataTemplate>

        </ResourceDictionary>
    </Application.Resources>
</Application>
