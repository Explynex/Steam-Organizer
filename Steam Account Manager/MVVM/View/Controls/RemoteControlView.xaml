<UserControl x:Class="Steam_Account_Manager.MVVM.View.Controls.RemoteControlView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="clr-namespace:Steam_Account_Manager.MVVM.ViewModels"
             xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks" xmlns:ui="clr-namespace:Steam_Account_Manager.UIExtensions"
             d:DataContext="{d:DesignInstance Type=vm:RemoteControlViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="600">

    <UserControl.Resources>
        
        <Style x:Key="RemoteTabControl" TargetType="{x:Type TabControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid UseLayoutRounding="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <TabPanel Margin="0 25 0 0" IsItemsHost="True" HorizontalAlignment="Center" VerticalAlignment="Top"/>

                            <Border Grid.Row="1" Margin="0 30 0 0" Visibility="{Binding IsLoggedOn,Converter={StaticResource BoolToVis}}" 
                            CornerRadius="15" Background="{DynamicResource adv_background}">
                                <ContentPresenter  ContentSource="SelectedContent"/>
                            </Border>
                           
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RemoteControlTabItem" TargetType="{x:Type TabItem}">
            <Setter Property="Foreground" Value="{DynamicResource default_foreground}"/>
            <Setter Property="IsHitTestVisible" Value="{Binding IsLoggedOn}"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="MinWidth" Value="45"/>
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Grid  Width="Auto">
                            
                        
                        <Border Name="Border" Margin="10 0 10 0"  CornerRadius="7" Width="45" Cursor="Hand">
                            <ContentPresenter x:Name="ContentSite" 
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"/>
                        </Border>

                            <Rectangle Fill="White" Width="0.5"  Opacity="0.8"
                                       Visibility="{TemplateBinding Property=Tag}"
                                       HorizontalAlignment="Right"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource menu_button_background}" />
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="Transparent" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="commandBox" TargetType="TextBox">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Opacity" Value="0.7"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="CaretBrush" Value="{DynamicResource atv_rectangles_shadow}"/>
        </Style>
        
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="95"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <!--#region Tab control -->
        <Border d:Visibility="Collapsed" Visibility="{Binding ElementName=tabs,Path=Visibility}" Height="55" VerticalAlignment="Top" Margin="0 17 0 0" HorizontalAlignment="Center" CornerRadius="15" 
                Background="{DynamicResource second_main_brush}" Width="340">

        </Border>
        <TabControl x:Name="tabs" d:Visibility="Collapsed" Visibility="{Binding IsLoggedOn,Converter={StaticResource BoolToVis}}" Grid.RowSpan="3" Style="{StaticResource RemoteTabControl}" Margin="0" SelectedIndex="{Binding SelectedTabIndex}">
            <TabItem Style="{StaticResource RemoteControlTabItem}" IsSelected="True">
                <TabItem.Header>
                    <Icon:PackIconMaterial Kind="Account" Width="25" Height="25"/>
                </TabItem.Header>
                <TabItem.Content>
                    <Grid>
                        <Button  Style="{StaticResource ModernColoredButton}" FontWeight="Normal"
                         CommandParameter="{Binding ElementName=Recently}" Command="{Binding LogOutCommand}"
                         VerticalAlignment="Top" HorizontalAlignment="Left" Width="45" Height="30" Margin="23 21 0 0">
                            <Icon:Material Kind="Logout" RotationAngle="180"/>
                            <Button.ToolTip>
                                <ToolTip ContentStringFormat="{DynamicResource rc_lv_logout}"/>
                            </Button.ToolTip>
                        </Button>
                        <StackPanel>
                            <Border Width="100" Height="100" Background="{DynamicResource background_border_color}" CornerRadius="100" Margin="0 15 0 5" HorizontalAlignment="Center"
                            BorderThickness="3" BorderBrush="{Binding CurrentUser.PersonaStateBrush}">

                                <WrapPanel Name ="container" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <Image x:Name="steamImage" HorizontalAlignment="Center" VerticalAlignment="Center"
                               Source="{Binding CurrentUser.AvatarUrl}" Stretch="Fill"/>
                                    <WrapPanel.OpacityMask>
                                        <VisualBrush >
                                            <VisualBrush.Visual>
                                                <Border Height="100" Width="100" Background="White" CornerRadius="100" />
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </WrapPanel.OpacityMask>
                                </WrapPanel>
                            </Border>

                            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                <TextBlock Text="{DynamicResource rc_lv_loggedIn}" FontSize="16" FontWeight="Medium" Foreground="{DynamicResource rc_lv_main_text}" />
                                <TextBlock Text="{Binding Username}" FontSize="16" FontWeight="Normal" Foreground="{DynamicResource default_foreground}" />
                            </StackPanel>

                            <Rectangle Margin="0 10 0 0" Width="530" Height="1" Fill="{DynamicResource adv_rectangle}" Opacity="1"/>

                        </StackPanel>

                        <StackPanel HorizontalAlignment="Right" Margin="0 20 25 0" VerticalAlignment="Top">
                            <TextBlock Text="{Binding CurrentUser.Wallet,UpdateSourceTrigger=PropertyChanged,TargetNullValue=0\,00 $}" FontSize="15" FontWeight="Medium" 
                           Foreground="{DynamicResource menu_button_background}" d:Text="ARS$ 5254,23"/>
                            <TextBlock d:Text="Argentina" Text="{Binding CurrentUser.Region}" FontSize="9" HorizontalAlignment="Right" FontWeight="Thin"
                                       Foreground="{DynamicResource first_settings_text}" Opacity="0.8"/>
                        </StackPanel>
                       

                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0 0 0 12">
                            <TextBlock Text="{DynamicResource rc_lv_nickname}" FontSize="16" FontWeight="Medium" Foreground="{DynamicResource rc_lv_main_text}" />
                            <TextBox x:Name="nickname" FontSize="15" Text="{Binding CurrentUser.Nickname,Mode=OneWay}"
                             Background="Transparent" BorderThickness="0" VerticalContentAlignment="Center"
                             FontWeight="Normal" Foreground="{DynamicResource default_foreground}"
                             MaxLength="30">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="IsReadOnly" Value="True"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=editNick,Path=IsChecked}" Value="True">
                                                <Setter Property="IsReadOnly" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>

                            <ToggleButton x:Name="editNick"  HorizontalAlignment="Right"
                                  CommandParameter="{Binding ElementName=nickname}"
                                  Width="18" Height="18" Margin="3 1 0 0">
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Setter Property="Width" Value="18"/>
                                        <Setter Property="Height" Value="18"/>
                                        <Setter Property="Margin" Value="5 0 0 0"/>
                                        <Setter Property="Cursor" Value="Hand"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Border Background="{DynamicResource adv_copy_button}" BorderThickness="0" CornerRadius="4">
                                                        <Icon:PackIconMaterial x:Name="ico" Kind="Pencil" Foreground="white" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                       Width="11" Height="11"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter TargetName="ico" Property="Kind" Value="Check"/>
                                                        </Trigger>
                                                        <Trigger Property="IsChecked" Value="False">
                                                            <Setter Property="Command" Value="{Binding ChangeNicknameCommand}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                                <Icon:PackIconMaterial Kind="PencilOutline" Style="{StaticResource gridButtonIcon}" Width="1" Height="10"/>
                                <ToggleButton.ToolTip>
                                    <ToolTip ContentStringFormat="{DynamicResource rc_lv_editNick}"/>
                                </ToggleButton.ToolTip>
                            </ToggleButton>
                        </StackPanel>

                        <!-- Left info panel -->
                        <StackPanel HorizontalAlignment="Left" VerticalAlignment="Top" Margin="70 190 0 0">

                            <StackPanel Orientation="Horizontal" Margin="0 3 0 0">
                                <TextBlock Text="SteamID64: " FontSize="14" FontWeight="Medium" Foreground="{DynamicResource rc_lv_main_text}" VerticalAlignment="Center" />
                                <TextBox x:Name="steamIDbox" Style="{StaticResource settings_data_box}" Text="{Binding CurrentUser.SteamID64}" VerticalContentAlignment="Center" />
                                <Button Style="{StaticResource ModernCopyButton}" Margin="5 -1 0 0" Click="IdCopyButton_Click"/>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="0 0 0 0">
                                <TextBlock Text="{DynamicResource rc_lv_hostedOn}" FontSize="14" FontWeight="Medium" Foreground="{DynamicResource rc_lv_main_text}" />
                                <TextBlock Text="{Binding CurrentUser.IPCountryCode}" FontSize="14" FontWeight="Normal" Foreground="{DynamicResource default_foreground}" />
                                <Image Margin="7 3 0 0" Height="10" Width="17" Source="{Binding CurrentUser.IPCountryImage}"/>
                            </StackPanel>

                            <TextBlock Margin="0 3 0 0" FontSize="14" FontWeight="Medium">
                                <Run Text="{DynamicResource rc_lv_authedDevices}" Foreground="{DynamicResource rc_lv_main_text}"/>
                                <Run Text="{Binding CurrentUser.AuthedComputers,Mode=OneWay}" FontWeight="Normal" Foreground="{DynamicResource default_foreground}"/>
                            </TextBlock>

                            <StackPanel Orientation="Horizontal" Margin="0 3 0 0">
                                <TextBlock Text="{DynamicResource rc_lv_emailAddress}" FontSize="14" FontWeight="Medium" Foreground="{DynamicResource rc_lv_main_text}" />
                                <TextBox Style="{StaticResource settings_data_box}" Text="{Binding CurrentUser.EmailAddress}"/>
                            </StackPanel>

                            <TextBlock Margin="0 2 0 0" FontSize="14" FontWeight="Medium">
                                <Run Text="{DynamicResource rc_lv_emailVerif}" Foreground="{DynamicResource rc_lv_main_text}"/>
                                <Run Text="{Binding CurrentUser.IsEmailVerified,Mode=OneWay}" FontWeight="Normal" Foreground="{DynamicResource default_foreground}"/>
                            </TextBlock>
                            
                        </StackPanel>

                        <!-- Combo boxes -->
                        <StackPanel VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0 190 70 0">
                            <TextBlock Text="{DynamicResource rc_lv_accountState}" FontSize="14" FontWeight="Medium" Margin="0 0 0 5" Foreground="{DynamicResource default_foreground}" />
                            <ComboBox x:Name="state_box" Width="140" Height="25" SelectedIndex="{Binding CurrentUser.PersonaState,Mode=TwoWay}" ItemsSource="{DynamicResource rc_lv_accountStates}" />


                            <TextBlock Text="{DynamicResource rc_lv_uiMode}" FontSize="14" FontWeight="Medium"
                               Margin="0 20 0 5" Foreground="{DynamicResource default_foreground}" />
                            <ComboBox x:Name="ui_box" Width="140" Height="25" SelectionChanged="ui_box_SelectionChanged" ItemsSource="{DynamicResource rc_lv_uiModes}"/>


                        </StackPanel>
                    </Grid>
                </TabItem.Content>
            </TabItem>

            <TabItem Style="{StaticResource RemoteControlTabItem}">
                <TabItem.Header>
                    <Icon:PackIconMaterial Kind="GoogleController" Width="25" Height="25"/>
                </TabItem.Header>
                <TabItem.Content>
                    <Grid>
                        <Border Background="{DynamicResource adv_borders_background}" Opacity="0.6"  Margin="5,8,117,162" 
                                Height="25" CornerRadius="15 15 2 2 " VerticalAlignment="Top"/>

                        <TextBlock Foreground="{DynamicResource default_secundary_foreground}" Text="{Binding Games.Count,StringFormat=#{0}}"
                                   Margin="20,16,17,162" VerticalAlignment="Top" HorizontalAlignment="Left" FontWeight="Medium" FontSize="10" />

                        <DataGrid x:Name="games" Margin="0 8 117 9" Background="Transparent" ItemsSource="{Binding Games}" VirtualizingPanel.VirtualizationMode="Standard"
                                  VirtualizingPanel.CacheLength="10" ScrollViewer.VerticalScrollBarVisibility="Visible">

                            <DataGrid.Columns>
                                <DataGridTemplateColumn Width="120">
                                    <DataGridTemplateColumn.CellStyle>
                                        <Style TargetType="DataGridCell" >
                                            <Setter Property="HorizontalAlignment" Value="Left"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="DataGridCell">
                                                        <Image Width="90" Height="37" Cursor="Hand" Margin="20 0 0 0">
                                                            <Image.Source>
                                                                <BitmapImage UriSource="{Binding ImageURL,Mode=OneWay}" DecodePixelWidth="90" DecodePixelHeight="37" CacheOption="OnLoad" />
                                                            </Image.Source>
                                                            <Image.InputBindings>
                                                                <MouseBinding MouseAction="LeftClick"
                                                                              Command="{Binding DataContext.OpenStoreAppLinkCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorLevel=1,AncestorType=DataGrid}}"
                                                                              CommandParameter="{Binding AppID}"/>
                                                            </Image.InputBindings>
                                                        </Image>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTemplateColumn.CellStyle>
                                </DataGridTemplateColumn>

                                <DataGridTextColumn Header="{DynamicResource adat_gameTabName}"  Binding="{Binding Name}" IsReadOnly="True" Width="140">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Foreground" Value="{DynamicResource default_foreground}"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="HorizontalAlignment" Value="Left"/>
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                            <Setter Property="HorizontalAlignment" Value="Left"/>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>

                                <DataGridTextColumn Header="{DynamicResource adat_gameTabTime}" Binding="{Binding PlayTime_Forever,StringFormat={}{0} h}" IsReadOnly="True" Width="*">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Foreground" Value="{DynamicResource default_foreground}"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>


                                <DataGridTemplateColumn Width="60">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">

                                                <ToggleButton Style="{StaticResource ModernCheckbox}" Width="25" Height="25" IsChecked="{Binding IsSelected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                              PreviewMouseLeftButtonDown="SelectedGamesCountValidator" Background="{DynamicResource background_border_color}">
                                                    <ToggleButton.ToolTip>
                                                        <ToolTip ContentStringFormat="Remember game for idle"/>
                                                    </ToggleButton.ToolTip>
                                                </ToggleButton>

                                                <Button Style="{StaticResource gridNoteButton}" Width="25" Height="25" Margin="5 0 0 0" Padding="0"
                                                        Command="{Binding DataContext.OpenGameAchievementsCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorLevel=1,AncestorType=DataGrid}}"
                                                        CommandParameter="{Binding AppID}">
                                                    <Icon:PackIconMaterial Kind="StarCog" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                    <Button.ToolTip>
                                                        <ToolTip ContentStringFormat="Game achievements"/>
                                                    </Button.ToolTip>
                                                </Button>

                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>

                        <Rectangle Fill="{DynamicResource menu_button_background}" Width="8"
                   Height="310" RadiusY="3" RadiusX="3" Margin="356.75 25 0 0" Opacity="0.2" IsHitTestVisible="False" />

                        <StackPanel  Margin="0 13 15 0" VerticalAlignment="Top" HorizontalAlignment="Right">

                            <TextBlock  FontSize="11" Foreground="{DynamicResource default_foreground}"
                       HorizontalAlignment="Center" Margin="0 0 0 5" Width="90" TextAlignment="Center">
                    <Run Text="{DynamicResource rc_gv_selected}" />
                <Run Text="{Binding SelectedGamesCount,Mode=OneWay}" Foreground="{DynamicResource second_main_brush}"/>
                            </TextBlock>

                            <Button Command="{Binding UpdateGamesListCommand}" 
                Style="{StaticResource ModernColoredButton}"   Content="{DynamicResource rc_gv_Update}"/>


                        </StackPanel>

                        <StackPanel Margin="0 0 15 20" VerticalAlignment="Bottom" HorizontalAlignment="Right">



                            <StackPanel Orientation="Horizontal" Margin="0 0 0 10">
                                <TextBlock FontSize="11" Foreground="{DynamicResource default_foreground}"
                       Text="Auto idling" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0 0 3 0" />
                                <ToggleButton Width="23" Height="23" IsChecked="{Binding CurrentUser.AutoIdlingGames,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                              Style="{StaticResource ModernCheckbox}" Background="{DynamicResource rc_button_back}" Margin="0">
                                    <ToggleButton.ToolTip>
                                        <ToolTip ContentStringFormat="{DynamicResource rc_gv_saveGameListDesc}"/>
                                    </ToggleButton.ToolTip>
                                </ToggleButton>
                            </StackPanel>


                            <TextBlock FontSize="11" Foreground="{DynamicResource default_foreground}"
                       Text="{DynamicResource rc_gv_customGameTitle}" HorizontalAlignment="Center" Margin="0 0 0 3" />
                            <Grid Margin="0 0 0 0">
                                <Border Margin="0 0 0 0" Background="{DynamicResource rc_button_back}"
                        Height="24" CornerRadius="5" Opacity="0.6"/>
                                <TextBox Style="{StaticResource settings_data_box}" FontSize="12" Padding="2" 
                         IsReadOnly="False" Width="80" MaxLength="32" VerticalContentAlignment="Center"
                                         Text="{Binding CurrentUser.CustomGameTitle,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                         Foreground="{DynamicResource default_secundary_foreground}"/>
                            </Grid>
                            
                            <ToggleButton Style="{StaticResource idle_button}" IsChecked="{Binding IsGamesIdling}" Margin="0 10 0 0"/>
                        </StackPanel>

                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0 0 130 0"
                   TextAlignment="Center" FontSize="28" FontWeight="Bold" Foreground="{DynamicResource default_foreground}"
                   Opacity="0.7" Visibility="{Binding Games.Count,Converter={StaticResource BoolToVisInverted}}"
                   Text="{DynamicResource rc_gv_noGames}"/>

                    </Grid>
                </TabItem.Content>
            </TabItem>

            <TabItem Style="{StaticResource RemoteControlTabItem}">
                <TabItem.Header>
                    <Icon:PackIconMaterial Kind="Message" Width="25" Height="25"/>
                </TabItem.Header>

                <TabItem.Content>
                    <StackPanel Orientation="Horizontal">

                        <!-- Chat area -->
                        <Grid x:Name="steamChat" Margin="-50" Width="0" IsHitTestVisible="{Binding CurrentUser.InterlocutorID}">
                            <StackPanel VerticalAlignment="Top"
                       HorizontalAlignment="Left" Margin="25 12 0 0" >

                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Margin="0 0 10 0" FontFamily="Cascadia Mono"  Foreground="{DynamicResource second_settings_text}"
                                Text="Steam chat" FontSize="20"/>

                                    <StackPanel Orientation="Horizontal" Visibility="{Binding CurrentUser.InterlocutorID,Converter={StaticResource BoolToVis}}">
                                        <TextBlock Foreground="{DynamicResource default_foreground}" FontWeight="Medium"
                                 Background="Transparent" Text="{DynamicResource rc_mv_chat}" Margin="0 6 0 0"/>

                                        <TextBox Foreground="{DynamicResource default_foreground}" FontWeight="Normal" IsReadOnly="True"
                                MaxWidth="120"  FontSize="11" VerticalAlignment="Center" BorderThickness="0"
                                 Background="Transparent" Text="{Binding CurrentUser.InterlocutorID}" Margin="0 3 0 0"/>

                                        <Button x:Name="leaveChatBtn" Style="{StaticResource ModernColoredButton}"  Click="Button_Click"
                                 Command="{Binding LeaveChatCommand}" Width="26" Height="26" Margin="5 0 0 0">
                                            <Icon:Material Kind="Logout" RotationAngle="180"/>
                                            <Button.ToolTip>
                                                <ToolTip ContentStringFormat="{DynamicResource rc_mv_chatLeave}"/>
                                            </Button.ToolTip>
                                        </Button>
                                    </StackPanel>

                                </StackPanel>

                                <Rectangle Fill="{DynamicResource adv_rectangle}" 
                               Width="290" Height="2" Margin="-5 5 0 5"/>
                            </StackPanel>

                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left" TextAlignment="Center"
                           Margin="55 30 0 50" FontSize="27" FontWeight="Bold" Foreground="{DynamicResource default_foreground}"
                   Opacity="0.7" Text="{DynamicResource rc_mv_chatNotSelect}" Visibility="{Binding CurrentUser.InterlocutorID,Converter={StaticResource BoolToVisInverted}}"/>

                            <ListBox x:Name="messanger" Background="Transparent" Width="310" Margin="20 50 15 60" HorizontalAlignment="Left"
                             ItemsSource="{Binding Messages,Mode=OneWay}" BorderThickness="0" ScrollViewer.VerticalScrollBarVisibility="Visible"
                             VirtualizingPanel.IsVirtualizing="True" ScrollViewer.ScrollChanged="messanger_ScrollChanged"
                             VirtualizingPanel.CacheLengthUnit="Item" VirtualizingPanel.CacheLength="1,1" VirtualizingPanel.ScrollUnit="Pixel"
                             VirtualizingPanel.VirtualizationMode="Recycling" ScrollViewer.CanContentScroll="True">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="IsHitTestVisible" Value="False" />
                                        <Setter Property="HorizontalAlignment" Value="Left"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsSelf,Mode=OneWay}" Value="True">
                                                <Setter Property="HorizontalAlignment" Value="Right"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Margin="0 0 0 5" >
                                            <TextBlock FontSize="10" Text="{Binding Nickname}" Foreground="{DynamicResource default_secundary_foreground}" 
                                           Opacity="0.7" Margin="8 0 8 2" HorizontalAlignment="{Binding ElementName=border,Path=HorizontalAlignment}" FontWeight="Medium"/>

                                            <Border x:Name="border" MinHeight="30" MinWidth="100" MaxWidth="290">
                                                <Border.Style>
                                                    <Style TargetType="Border">
                                                        <Setter Property="Background" Value="{DynamicResource second_main_brush}"/>
                                                        <Setter Property="HorizontalAlignment" Value="Left"/>
                                                        <Setter Property="CornerRadius" Value="15 15 15 0"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsSelf,Mode=OneWay}" Value="True">
                                                                <Setter Property="Background" Value="{DynamicResource menu_button_background}"/>
                                                                <Setter Property="HorizontalAlignment" Value="Right"/>
                                                                <Setter Property="CornerRadius" Value="15 15 0 15"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>

                                                <TextBox Text="{Binding Message}" Margin="7" VerticalAlignment="Center"
                                BorderThickness="0" Background="Transparent" IsReadOnly="True"
                                CaretBrush="{DynamicResource atv_rectangles_shadow}" TextWrapping="Wrap">
                                                    <TextBox.Style>
                                                        <Style TargetType="TextBox">
                                                            <Setter Property="Foreground" Value="{DynamicResource default_foreground}"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsSelf,Mode=OneWay}" Value="True">
                                                                    <Setter Property="Foreground" Value="White"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBox.Style>
                                                </TextBox>
                                            </Border>

                                            <TextBlock FontSize="9" HorizontalAlignment="{Binding ElementName=border,Path=HorizontalAlignment}" Text="{Binding Time}" Foreground="{DynamicResource default_secundary_foreground}" 
                                           Opacity="0.7" Margin="5 0 5 0" FontWeight="Thin" />

                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>

                            <TextBlock Margin="29,0,0,33" VerticalAlignment="Bottom" HorizontalAlignment="Left" Foreground="{DynamicResource default_secundary_foreground}" IsHitTestVisible="False"
                          Panel.ZIndex="1" Text="{DynamicResource rc_mv_writeMsg}" FontSize="12"
                          Visibility="{Binding ElementName=MessageBox, Path=Text.Length,Converter={StaticResource BoolToVisInverted}}"/>


                            <!--#region Typing chat message box -->
                            <StackPanel Orientation="Horizontal"  VerticalAlignment="Bottom" HorizontalAlignment="Left"
                             Margin="20 0 0 15" >

                                <Border Height="40" Width="265" CornerRadius="10"
                        Background="{DynamicResource second_main_brush}" Opacity="0.8">
                                    <TextBox x:Name="MessageBox" MaxLength="4000" AcceptsTab="True"
                              TextWrapping="Wrap" Foreground="{DynamicResource default_secundary_foreground}"
                             AcceptsReturn="True" MaxLines="140" Background="Transparent" Margin="5"
                             KeyUp="MessageBox_KeyUp" PreviewKeyDown="MessageBox_PreviewKeyDown"
                             BorderThickness="0" CaretBrush="{DynamicResource default_secundary_foreground}"/>
                                </Border>

                                <Button  Style="{StaticResource ModernColoredButton}" IsHitTestVisible="{Binding ElementName=MessageBox,Path=Text.Length}" Width="40" Height="40" Margin="5 0 0 0">
                                    <Icon:Material Kind="Send" Width="18" Height="18" />
                                </Button>
                            </StackPanel>
                            <!--#endregion-->

                            <Rectangle Fill="{DynamicResource menu_button_background}" Width="8" Margin="0 0 16 15"
                   Height="235" RadiusY="3" RadiusX="3" HorizontalAlignment="Right" Opacity="0.2" IsHitTestVisible="False" />
                        </Grid>

                        <ToggleButton x:Name="openChatButton">
                            <ToggleButton.Triggers>
                                <EventTrigger RoutedEvent="ToggleButton.Checked">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Width" Storyboard.TargetName="steamChat"
                                                 From="0" To="345" Duration="0:0:0.7"/>
                                            <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="steamChat"
                                                   To="-0" Duration="0:0:1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Width"  Storyboard.TargetName="steamChat"
                                                 From="345" To="0" Duration="0:0:0.7"/>
                                            <ThicknessAnimation Storyboard.TargetProperty="Margin"  Storyboard.TargetName="steamChat"
                                                   To="-50" Duration="0:0:1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ToggleButton.Triggers>
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="Width" Value="20"/>
                                    <Setter Property="Height" Value="18"/>
                                    <Setter Property="Cursor" Value="Hand"/>
                                    <Setter Property="IsChecked" Value="True"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Border x:Name="border"  Background="{DynamicResource rc_button_back}" CornerRadius="0 5 5 0">
                                                    <Icon:PackIconMaterial x:Name="arrowIcon" Kind="ArrowDownBold" Width="15" Height="12" RotationAngle="270"
                                                   VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource default_secundary_foreground}"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding CurrentUser.InterlocutorID}" Value="0">
                                                        <Setter Property="IsChecked" Value="False"/>
                                                    </DataTrigger>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter TargetName="arrowIcon" Property="RotationAngle" Value="90"/>
                                                        <Setter TargetName="border" Property="CornerRadius" Value="5"/>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="arrowIcon" Property="Foreground" Value="#ffff"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>


                        <StackPanel HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5 40 0 0">
                            <TextBlock Text="{DynamicResource rc_mv_goToChatId}" Margin="4 0 0 2" FontSize="11" Foreground="{DynamicResource first_settings_text}"/>
                            <StackPanel Orientation="Horizontal" >

                                <Border Margin="0 0 -124 0" Background="{DynamicResource rc_button_back}"
                        Height="24" CornerRadius="5 0 0 5" Opacity="0.6"/>

                                <TextBox x:Name="add_idBox" Style="{StaticResource settings_data_box}" FontSize="11" Padding="4 5 0 0" Foreground="{DynamicResource default_secundary_foreground}"
                         IsReadOnly="False" Width="115" Margin="0 0 6 0" MaxLength="60"/>


                                <Button Command="{Binding SelectChatCommand}" CommandParameter="{Binding ElementName=add_idBox,Path=Text}" IsHitTestVisible="{Binding ElementName=add_idBox, Path=Text.Length}" 
                        Style="{StaticResource ModernColoredButton}"  Content="Select" Height="26" Width="50"/>

                            </StackPanel>


                            <TextBlock Text="{DynamicResource rc_mv_currntAdm}" Margin="4 7 0 2" FontSize="11" Foreground="{DynamicResource first_settings_text}"/>
                            <StackPanel Orientation="Horizontal" >

                                <Border Margin="0 0 -124 0" Background="{DynamicResource rc_button_back}"
                        Height="24" CornerRadius="5 0 0 5" Opacity="0.6"/>

                                <TextBox x:Name="add_admin_box"  Style="{StaticResource settings_data_box}" FontSize="11" Padding="4 5 0 0"  Foreground="{DynamicResource default_secundary_foreground}"
                         IsReadOnly="False" Width="115" Margin="0 0 6 0" MaxLength="60" Text="{Binding CurrentUser.AdminID,Mode=OneWay}"/>


                                <Button IsHitTestVisible="{Binding ElementName=add_admin_box, Path=Text.Length}"  Command="{Binding AddChatAdminCommand}" CommandParameter="{Binding ElementName=add_admin_box,Path=Text}"
                        Style="{StaticResource ModernColoredButton}" Content="Add" Height="26" Width="50">
                                    <Button.ToolTip>
                                        <ToolTip ContentStringFormat="{DynamicResource rc_mv_addAdmin}"/>
                                    </Button.ToolTip>
                                </Button>
                            </StackPanel>

                            <StackPanel Margin="0 60 0 0" Orientation="Horizontal">
                                <TextBlock Text="{DynamicResource rc_mv_saveChatLog}" Margin="4 3 10 2" FontSize="13" 
                                       Foreground="{DynamicResource first_settings_text}"/>
                                <ToggleButton Style="{StaticResource ModernCheckbox}" Width="25" Height="25"
                                          Background="{DynamicResource rc_button_back}" IsChecked="{Binding CurrentUser.SaveChatLog}"/>
                            </StackPanel>

                            <StackPanel Margin="0 5 0 0" Orientation="Horizontal">
                                <TextBlock Text="{DynamicResource rc_mv_enableCmds}" Margin="4 3 10 2" FontSize="13" 
                                       Foreground="{DynamicResource first_settings_text}"/>

                                <ToggleButton Style="{StaticResource ModernCheckbox}" Width="25" Height="25" 
                                          Background="{DynamicResource rc_button_back}" IsChecked="{Binding CurrentUser.EnableCommands}"/>
                            </StackPanel>
                        </StackPanel >


                        <!-- Commands area -->
                        <Grid Margin="20 25 0 0">
                            <Border Background="{DynamicResource rc_button_back}" CornerRadius="0 0 15 15" 
                                Opacity="0.6" Margin="0 25 0 0" Height="190" VerticalAlignment="Top"/>
                            <Border Background="{DynamicResource rc_button_back}" CornerRadius="15 15 0 0" 
                                Opacity="1" Margin="0 0 0 0" Height="25" VerticalAlignment="Top"/>
                            <StackPanel>
                                <TextBlock Text="{DynamicResource rc_mv_cmdsTitle}"
                                   Margin="10 5 0 2" FontWeight="Medium"
                                   Foreground="{DynamicResource default_secundary_foreground}"/>

                                <ListBox Background="Transparent" Width="320" Height="185" BorderThickness="0" 
                                     ScrollViewer.VerticalScrollBarVisibility="Hidden">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0 3 0 0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="105"/>
                                                    <ColumnDefinition Width="105"/>
                                                    <ColumnDefinition Width="105"/>
                                                </Grid.ColumnDefinitions>

                                                <TextBox Grid.Column="0"  Text="{Binding Keyword}" MaxWidth="90" Style="{StaticResource commandBox}" Foreground="{DynamicResource first_settings_text}"/>

                                                <TextBox Grid.Column="1" Text="{Binding CommandExecution}" MaxWidth="90" Style="{StaticResource commandBox}" Foreground="{DynamicResource first_settings_text}"/>

                                                <TextBox Grid.Column="2" Text="{Binding MessageAfterExecute}" MaxWidth="90" Style="{StaticResource commandBox}" Foreground="{DynamicResource first_settings_text}"/>

                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                    <ListBoxItem />
                                </ListBox>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </TabItem.Content>
            </TabItem>

            <TabItem Style="{StaticResource RemoteControlTabItem}">
                <TabItem.Header>
                    <Icon:PackIconMaterial Kind="AccountGroup" Width="25" Height="25"/>
                </TabItem.Header>
                <TabItem.Content>
                    <Grid>
                        <Border Background="{DynamicResource adv_borders_background}" Opacity="0.6"  Margin="5,8,117,162" 
                                Height="25" CornerRadius="15 15 2 2 " VerticalAlignment="Top"/>

                        <TextBlock Foreground="{DynamicResource default_secundary_foreground}" Text="{Binding Friends.Count,StringFormat=#{0}}"
                                   Margin="20,16,17,162" VerticalAlignment="Top" HorizontalAlignment="Left" FontWeight="Medium" FontSize="10" />

                        <DataGrid Margin="0 8 117 9" Background="Transparent" ItemsSource="{Binding Friends}" VirtualizingPanel.VirtualizationMode="Standard"
                                  VirtualizingPanel.CacheLength="10" ScrollViewer.VerticalScrollBarVisibility="Visible">

                            <DataGrid.Columns>
                                <DataGridTemplateColumn Width="85" CellStyle="{StaticResource FriendImageDataGridCellStyle}"/>

                                <DataGridTextColumn Header="{DynamicResource adv_nickname}"  Binding="{Binding Name}" IsReadOnly="True" Width="170">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Foreground" Value="{DynamicResource default_foreground}"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="HorizontalAlignment" Value="Left"/>
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                            <Setter Property="HorizontalAlignment" Value="Left"/>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>

                                <DataGridTextColumn Header="{DynamicResource rc_fv_friendSince}" Binding="{Binding FriendSince,Mode=OneWay}" IsReadOnly="True" Width="150">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Foreground" Value="{DynamicResource default_foreground}"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTemplateColumn Width="*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">

                                                <Button Style="{StaticResource MessageToFriend}" Width="25" Height="25" Padding="0"
                                                        Command="{Binding DataContext.OpenFriendChatCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorLevel=1,AncestorType=DataGrid}}"
                                                        CommandParameter="{Binding SteamID64}">
                                                    <Icon:PackIconMaterial Kind="MessageTextOutline" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                </Button>

                                                <Button Style="{StaticResource gridRemoveButton}" Margin="5 0 0 0" Width="25" Height="25" Padding="0"
                                                        Command="{Binding DataContext.RemoveFriendCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorLevel=1,AncestorType=DataGrid}}"
                                                        CommandParameter="{Binding}">
                                                    <Icon:PackIconMaterial Kind="CloseCircleOutline" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                                    <Button.ToolTip>
                                                        <ToolTip ContentStringFormat="Remove from friends"/>
                                                    </Button.ToolTip>
                                                </Button>

                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>

                        <Rectangle Fill="{DynamicResource menu_button_background}" Width="8"
                   Height="310" RadiusY="3" RadiusX="3" Margin="356.75 25 0 0" Opacity="0.2" IsHitTestVisible="False" />

                        <Button Command="{Binding UpdateFriendsListCommand}" VerticalAlignment="Top" HorizontalAlignment="Right"
                Style="{StaticResource ModernColoredButton}"   Content="{DynamicResource rc_gv_Update}" Margin="20 30 20 20"/>
                    </Grid>
                </TabItem.Content>
            </TabItem>

            <TabItem Style="{StaticResource RemoteControlTabItem}" Tag="{x:Static Visibility.Collapsed}">
                <TabItem.Header>
                    <Icon:PackIconMaterial Kind="Web" Width="25" Height="25"/>
                </TabItem.Header>
            </TabItem>
        </TabControl>
        <!--#endregion-->

        <!--#region Login border -->
        <Border x:Name="loginArea" d:Visibility="Visible" Grid.Row="1" Visibility="{Binding IsLoggedOn,Converter={StaticResource BoolToVisInverted}}" Background="{DynamicResource first_main_brush}" Width="350" CornerRadius="20">
            <Grid>

                <!--#region Credentials -->
                <StackPanel x:Name="credentialsPanel" d:Visibility="Visible" Visibility="{Binding ConfirmationType,Converter={StaticResource BoolToVisInverted}}" HorizontalAlignment="Center" Margin="0 20 0 10">

                    <TextBlock 
                       HorizontalAlignment="Center" Margin="0 0 0 15" 
                       FontFamily="Cascadia Mono"
                       Foreground="{DynamicResource second_settings_text}"
                       Text="Аутентификация" FontSize="20"/>

                    <Grid Grid.Row="1" Margin="0 40 0 0" HorizontalAlignment="Left" VerticalAlignment="Center">

                        <TextBox   Style="{StaticResource ModernTextBoxOutlined}" Width="250" Height="35"  
                          Text="{Binding Username, UpdateSourceTrigger=PropertyChanged}"
                         VerticalAlignment="Center" Tag="{DynamicResource adat_login}"/>
                        <Icon:PackIconMaterial Kind="AccountOutline" VerticalAlignment="Center"
                                           Height="22" Width="22" Margin="8 0 0 1"
                                           Foreground="{DynamicResource first_settings_text}"/>
                    </Grid>


                    <TextBlock Text="{DynamicResource adv_password}" FontWeight="Thin"
                       Width="57" Height="20" HorizontalAlignment="Left"
                       FontSize="14" Margin="0 20 0 0" Foreground="{DynamicResource first_settings_text}" />
                    <ui:ModernPasswordBox  Height="35" IconKeyColor="{DynamicResource first_settings_text}"
                                           BorderBrush="{DynamicResource first_settings_text}"
                                           Password="{Binding Password, UpdateSourceTrigger=PropertyChanged}"
                                                Width="250" BorderThickness="0 0 0 1"/>

                    <StackPanel Orientation="Horizontal" Margin="0 8 0 0">

                        <ToggleButton Style="{StaticResource ModernCheckbox}" Width="25" Height="25"
                                      Background="{DynamicResource background_border_color}" IsChecked="{Binding Properties.RememberRemoteUser,Mode=TwoWay}"/>

                        <TextBlock Text="Запомнить меня" VerticalAlignment="Center" Foreground="{DynamicResource first_settings_text}" Margin="10 0 0 0"/>
                    </StackPanel>



                    <Button Margin="0 30 0 22" Style="{StaticResource ModernColoredButton}" FontWeight="Normal" Content="Login"
                            IsDefault="True" MinWidth="200"
                          Command="{Binding LogOnCommand}">
                    </Button>

                </StackPanel>
                <!--#endregion-->
                
                <!--#region Mobile confirmation -->
                <StackPanel x:Name="confirmationPanel" d:Visibility="Collapsed" HorizontalAlignment="Center" Margin="0 20 0 10">
                    <TextBlock 
                       HorizontalAlignment="Center" Margin="0 0 0 15" 
                       FontFamily="Cascadia Mono"
                       Foreground="{DynamicResource second_settings_text}"
                       Text="{Binding Username}" FontSize="20"/>

                    <Border CornerRadius="5" Margin="0 35 0 0" Background="{DynamicResource background_border_color}" Width="300" Height="120">
                        <StackPanel VerticalAlignment="Bottom" Margin="10 0 0 0" Orientation="Horizontal">
                            <Image Source="\Images\login_mobile_auth.png" Width="75" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>

                            <TextBlock VerticalAlignment="Center" Text="Подтвердите вход в своём мобильном приложении Steam" Foreground="{DynamicResource first_settings_text}"
                                      Padding="10 0 10 0"  TextWrapping="Wrap" Width="210" FontSize="15"/>
                        </StackPanel>
                    </Border>

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 55 35 0">
                        <Button Style="{StaticResource ModernServiceButton}" Width="35" Height="35" Command="{Binding LogOutCommand}">
                            <Icon:PackIconMaterial Kind="ArrowLeft" Height="25" Width="25"/>
                        </Button>
                        <Button Style="{StaticResource  ModernColoredButton}" Height="40" Content="Войти с помощью кода"
                            HorizontalAlignment="Center" Padding="10"  Width="Auto" Margin="10 0 0 0" Command="{Binding SendSteamGuardCodeCommand}"/>
                    </StackPanel>
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ConfirmationType}" Value="4">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                </StackPanel>
                <!--#endregion-->

                <!--#region Steam guard -->
                <StackPanel d:Visibility="Collapsed" HorizontalAlignment="Center" Margin="0 20 0 10">
                    <TextBlock 
                       HorizontalAlignment="Center" Margin="0 0 0 15" 
                       FontFamily="Cascadia Mono"
                       Foreground="{DynamicResource second_settings_text}" d:Text="Username"
                       Text="{Binding Username}" FontSize="20"/>

                    <TextBlock Foreground="{DynamicResource default_foreground}" FontSize="15"
                               TextWrapping="Wrap" MaxWidth="250" TextAlignment="Center" Margin="0 20 0 0">
                        <Run Text="Введите код доступа"/>
                        <Run>
                            <Run.Style>
                                <Style TargetType="Run">
                                    <Setter Property="Text" Value="из вашего двухфакторного аутентификатора"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ConfirmationType}" Value="2">
                                            <Setter Property="Text" Value="из письма, которое пришло на почту"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Run.Style>
                        </Run>
                    </TextBlock>

                    <TextBlock Text="Steam Guard" Margin="0 20 0 3" HorizontalAlignment="Center" Foreground="{DynamicResource default_foreground}"
                               Opacity="0.8" FontWeight="Medium"/>

                    <TextBox Style="{StaticResource ModernTextBoxBordered}" HorizontalAlignment="Center"
                             PreviewTextInput="SteamGuardCodePreviewTextInput" CharacterCasing="Upper" Text="{Binding AuthCode,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                             HorizontalContentAlignment="Center" FontSize="30" Padding="0" FontFamily="Cascadia Code" d:Text="12CVZ"
                              Height="50" Width="200" MaxLength="5" Background="{DynamicResource background_border_color}"/>

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 60 35 0">
                        <Button Style="{StaticResource ModernServiceButton}" Width="35" Height="35" Command="{Binding LogOutCommand}">
                            <Icon:PackIconMaterial Kind="ArrowLeft" Height="25" Width="25"/>
                        </Button>

                        <Button Style="{StaticResource  ModernColoredButton}" Height="40" Content="Войти в аккаунт"
                            HorizontalAlignment="Center" Padding="10"  Width="Auto" Margin="10 0 0 0" Command="{Binding SendSteamGuardCodeCommand}"/>
                    </StackPanel>
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=credentialsPanel,Path=Visibility}" Value="Collapsed"/>
                                        <Condition Binding="{Binding ElementName=confirmationPanel,Path=Visibility}" Value="Collapsed"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                </StackPanel>
                <!--#endregion-->

                <TextBlock VerticalAlignment="Center" FontSize="11" Margin="0 290 0 0" MaxWidth="300" TextAlignment="Center"
                       HorizontalAlignment="Center" Padding="0 0 0 0" d:Text="Testing error message title Testing error message title Testing error message title"
                       Foreground="PaleVioletRed" TextWrapping="Wrap" Text="{Binding ErrorMsg}" />

                <Rectangle VerticalAlignment="Top" Margin="0 60 0 0" Width="300" Height="1" Fill="{DynamicResource background_border_color}"/>
            </Grid>
        </Border>
        <!--#endregion-->

        <ListBox x:Name="recently" ItemsSource="{Binding RecentlyLoggedIn}" BorderThickness="0" Background="Transparent"
                 HorizontalAlignment="Center"  MaxWidth="530" ScrollViewer.CanContentScroll="False" Visibility="{Binding ElementName=loginArea,Path=Visibility}"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled">
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem" BasedOn="{StaticResource base_listboxItem}">
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Height" Value="90"/>
                    <Setter Property="Margin" Value="3 0 3 0"/>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Border Margin="4" Background="{DynamicResource first_main_brush}" CornerRadius="10" 
                            MouseLeftButtonDown="Border_MouseLeftButtonDown">
                        <StackPanel Margin="7">
                            <Rectangle RadiusY="5" RadiusX="5" Width="45" Height="45">
                                <Rectangle.Fill>
                                    <ImageBrush ImageSource="{Binding AvatarUrl}"/>
                                </Rectangle.Fill>
                            </Rectangle>
                            <TextBlock HorizontalAlignment="Center" Margin="0 2 0 0" Text="{Binding Username}" Width="60" TextTrimming="WordEllipsis" TextAlignment="Center"/>
                        </StackPanel>
                    </Border>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <!-- 
        <Button HorizontalAlignment="Left" Style="{StaticResource ModernServiceButton}" Width="18" Height="32" Margin="10 0 0 0">
            <Path Data="M15 18l-6-6 6-6" StrokeLineJoin="Round" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" StrokeThickness="6"
                  StrokeStartLineCap="Round" StrokeEndLineCap="Round" Stretch="Fill"/>
        </Button>
        -->
    </Grid>
</UserControl>
