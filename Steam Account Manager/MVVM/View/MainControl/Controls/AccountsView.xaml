<UserControl x:Class="Steam_Account_Manager.MVVM.View.MainControl.Controls.AccountsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:D="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewmodels="clr-namespace:Steam_Account_Manager.MVVM.ViewModels.MainControl"
             xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             D:DataContext="{D:DesignInstance Type=viewmodels:AccountsViewModel}"
             Mc:Ignorable="D"
             D:DesignHeight="450" D:DesignWidth="600">
   

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MaxHeight="44"/>
            <RowDefinition Height="48"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <!--Search Bar-->
        <Grid Width="440" HorizontalAlignment="Left" Grid.Row="0">
            <TextBlock Margin="20,0,45,0" VerticalAlignment="Center" Foreground="#b0b9c6" IsHitTestVisible="False"
                          Panel.ZIndex="1" Text="{DynamicResource av_searchbar_title}" 
                          Visibility="{Binding ElementName=txtSearch, Path=Text.IsEmpty,Converter={StaticResource BoolToVis}}"/>
            <Border x:Name="border" Background="{DynamicResource searchbox}" CornerRadius="20">
                <Border.Effect>
                    <DropShadowEffect Color="{DynamicResource drop_shadow}"/>
                </Border.Effect>
            </Border>

            <TextBox x:Name="txtSearch" VerticalAlignment="Center" SelectionBrush="{DynamicResource second_main_color}"
                     IsHitTestVisible="{Binding IsDatabaseEmpty,Converter={StaticResource BoolToVis}}"
                     Text="{Binding SearchBoxText, UpdateSourceTrigger=PropertyChanged}"
                     Margin="18,0,59,0" Background="{DynamicResource searchbox}" Foreground="#b0b9c6"
                     BorderBrush="{x:Null}" BorderThickness="0,0,0,0" MaxLength="80"/>


            <Icon:PackIconMaterial Kind="Magnify" Width="20" 
                                   Height="20" Foreground="#b0b9c6" 
                                   VerticalAlignment="Center" HorizontalAlignment="Right"
                                   Margin="0 0 20 0"/>
        </Grid>

        <!--Add Button-->
        <Button Style="{StaticResource addButton}" Name="btnAdd"
                         Grid.Row="0"
                Width="130" Height="44" Command="{Binding AddAccountWindowCommand}">
            <Button.Effect>
                <DropShadowEffect Color="{DynamicResource drop_shadow}"/>
            </Button.Effect>
            <StackPanel Orientation="Horizontal">
                <Icon:PackIconMaterial Kind="Plus" VerticalAlignment="Center"
                                               Margin="0 1 8 0" Width="11"
                                               Height="11" Foreground="{DynamicResource add_button_foreground}"/>
                <TextBlock Text="{DynamicResource av_addbutton_title}"  Foreground="{DynamicResource add_button_foreground}"/>
            </StackPanel>
        </Button>

        <!-- Manage Buttons -->
        <StackPanel Orientation="Horizontal" Grid.Row="1"  Margin="0 0 50 0"
                    HorizontalAlignment="Right" VerticalAlignment="Center">
            
            <!-- Save account database in file -->
            <Button Style="{StaticResource serviceButton}" Command="{Binding StoreAccountDatabaseCommand}"
                    IsEnabled="{Binding IsDatabaseEmpty,Converter={StaticResource BoolInverted}}">
                <Icon:PackIconMaterial Kind="ContentSaveAll" Width="20" Height="20"
                                       VerticalAlignment="Center" HorizontalAlignment="Center"/>
                <Button.ToolTip>
                    <ToolTip ContentStringFormat="{DynamicResource av_popup_saveDatabase}"/>
                </Button.ToolTip>
            </Button>

            <!-- Restore account database from file -->
            <Button  Style="{StaticResource serviceButton}" Command="{Binding RestoreAccountDatabaseCommand}">
                <Icon:PackIconMaterial Kind="UploadMultiple" RotationAngle="180" Width="20" Height="20"
                                       VerticalAlignment="Center" HorizontalAlignment="Center"/>
                <Button.ToolTip>
                    <ToolTip ContentStringFormat="{DynamicResource av_popup_restoreDatabase}"/>
                </Button.ToolTip>
            </Button>

            <!-- Restore account from file -->
            <Button Style="{StaticResource serviceButton}" Command="{Binding RestoreAccountCommand}" >
                <Icon:PackIconMaterial Kind="FileRestore"  Width="20" Height="20"
                                       VerticalAlignment="Center" HorizontalAlignment="Center"/>
                <Button.ToolTip>
                    <ToolTip ContentStringFormat="{DynamicResource av_popup_saveDatabase}"/>
                </Button.ToolTip>
            </Button>


            <!-- Refresh information about all accounts -->
            <Button Style="{StaticResource animatedRefresh}" Width="20" Height="20" Command="{Binding UpdateDatabaseCommand}"
                    IsEnabled="{Binding IsDatabaseEmpty,Converter={StaticResource BoolInverted}}">
                <Button.ToolTip>
                    <ToolTip ContentStringFormat="{DynamicResource av_popup_updAccounts}"/>
                </Button.ToolTip>
            </Button>


        </StackPanel>

        <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="10 0 0 0"
                    HorizontalAlignment="Left" VerticalAlignment="Center">
            <TextBlock Text="{DynamicResource av_searchByTitle}"  Foreground="{DynamicResource add_button_foreground}" FontWeight="Medium" FontSize="12"
                       VerticalAlignment="Center"/>
            <ComboBox Margin="5 0 0 0" SelectedIndex="{Binding SearchModeIndex}" Opacity="0.9" ItemsSource="{DynamicResource av_searchFilter}" />

        </StackPanel>

        <!--Members Data Grid-->
        <ScrollViewer VerticalScrollBarVisibility="Visible" 
                      Grid.Row="2" HorizontalAlignment="Left"
                      x:Name="scrollViewer" >
            <ListView ItemsSource="{Binding Path=AccountTabViews}"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     ScrollViewer.CanContentScroll="True" x:Name="accountsListView"
                     IsHitTestVisible="True" Background="Transparent" VirtualizingPanel.IsVirtualizing="True"
                     VirtualizingPanel.CacheLengthUnit="Item" VirtualizingPanel.CacheLength="2,2"
                     VirtualizingPanel.VirtualizationMode="Standard">
                <!--PreviewMouseMove="accountsListView_PreviewMouseMove"
                      PreviewMouseLeftButtonUp="accountsListView_PreviewMouseLeftButtonUp"-->
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel VirtualizingPanel.IsVirtualizing="True" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <ContentPresenter Margin="0 0 0 10"
                                                          Height="50"
                                                          Width="568">
                                    </ContentPresenter>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <!-- <Setter Property="AllowDrop" Value="True"/>
                        <EventSetter Event="PreviewMouseLeftButtonDown" Handler="ListViewItem_PreviewMouseLeftButtonDown"/>-->
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.Template>
                    <ControlTemplate TargetType="ItemsControl">
                        <Border>
                            <ItemsPresenter />
                        </Border>
                    </ControlTemplate>
                </ListView.Template>

            </ListView>

        </ScrollViewer>

        <!--Confirmation-->
        <Border Margin="10 0 0 0" Grid.Row="2" VerticalAlignment="Bottom"
                HorizontalAlignment="Left" x:Name="confirmBorder"
                Width="320" Height="40" Background="{DynamicResource popup_border_background}" Opacity="0.8"
                CornerRadius="15" Visibility="{Binding ConfirmBanner, Converter={StaticResource BoolToVis}}">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{DynamicResource av_confirmation_delete}" Foreground="White"
                       FontWeight="Normal" VerticalAlignment="Center"
                       Margin="15 0 0 0" FontSize="11"/>
                <Button Command="{Binding NoButtonCommand}" Margin="10 0 0 0" Style="{StaticResource confirmationNoButton}"
                        Width="25" Height="25">
                    <Icon:PackIconMaterial Kind="Close" Foreground="White" VerticalAlignment="Center" Width="12" Height="12"/>
                </Button>

                <Button Command="{Binding YesButtonCommand}" Margin="10 0 0 0" Style="{StaticResource confirmationYesButton}"
                        Width="25" Height="25">
                    <Icon:PackIconMaterial Kind="Check" Foreground="White" VerticalAlignment="Center"/>
                </Button>
            </StackPanel>
        </Border>

        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center" Margin="0 0 0 50"
                   FontSize="35" FontWeight="Bold" Foreground="{DynamicResource default_foreground}"
                   Opacity="0.7" Grid.Row="2" Visibility="{Binding IsDatabaseEmpty,Converter={StaticResource BoolToVis}}" Text="{DynamicResource av_noAccounts}" />


    </Grid>
</UserControl>
