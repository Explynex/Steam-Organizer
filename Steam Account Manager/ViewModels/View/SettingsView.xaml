<UserControl  x:Class="Steam_Account_Manager.ViewModels.View.SettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Steam_Account_Manager.ViewModels.View"
             xmlns:vm="clr-namespace:Steam_Account_Manager.ViewModels"
             xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:theme="clr-namespace:Steam_Account_Manager.Themes"
             d:DataContext="{d:DesignInstance Type=vm:SettingsViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="600">
    <UserControl.Resources>



    </UserControl.Resources>
    <Grid>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="80"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="60"/>
        </Grid.RowDefinitions>
        
        <Popup x:Name="Popup" Grid.Column="1" AllowsTransparency="True"
                       HorizontalOffset="0" VerticalOffset="10">
            <theme:MainPopup  x:Name="Header" Foreground="White"/>
        </Popup>

        <!--Header-->
        <TextBlock Grid.Row="0" Text="{DynamicResource sv_settings_title}" FontSize="30"  Foreground="{DynamicResource second_settings_text}"
                   Grid.Column="0" Margin="0 10" FontFamily="Cascadia Mono" />

        <Rectangle Height="1" VerticalAlignment="Top" Grid.Row="0"
                   Fill="{DynamicResource settings_rectangle}" Margin="0,60,0,0"/>

        <ScrollViewer Grid.Row="1" >
            <StackPanel>
                <TextBlock Text="{DynamicResource sv_title_interface}" 
                           VerticalAlignment="Center" Opacity="0.9"
                           FontFamily="Cascadia Mono"  FontSize="20" Margin="5 -3 0 8"  Foreground="{DynamicResource second_settings_text}"/>

                <!--Themes panel-->
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{DynamicResource sv_theme}" Style="{StaticResource settingTextBlock}"/>
                    <RadioButton Style="{StaticResource themeButton}"
                         Content="/Images/dark_preview.png"
                         IsChecked="{Binding ThemeMode[0]}"/>

                    <RadioButton Style="{StaticResource themeButton}"
                         Content="/Images/light_preview.png"
                         IsChecked="{Binding ThemeMode[1]}"/>

                    <RadioButton Style="{StaticResource themeButton}"
                         Content="/Images/nebula_preview.png"
                         IsChecked="{Binding ThemeMode[2]}">
                    </RadioButton>
                </StackPanel>

                <!--Language panel-->
                <StackPanel  Orientation="Horizontal" Margin="0 8 0 2">
                    <TextBlock Text="{DynamicResource sv_language}" Style="{StaticResource settingTextBlock}"/>
                    <RadioButton Style="{StaticResource languageButton}"          
                         IsChecked="{Binding LocaleMode[0]}"
                         Content="/Images/Countries_flags/United_Kingdom.png"/>
                    <RadioButton Style="{StaticResource languageButton}"
                         IsChecked="{Binding LocaleMode[1]}"
                          Content="/Images/Countries_flags/Russia.png"/>
                    <RadioButton Style="{StaticResource languageButton}"
                         IsChecked="{Binding LocaleMode[2]}"
                          Content="/Images/Countries_flags/Ukraine.png"/>
                </StackPanel>

                <Rectangle Margin="0 12 0 15" Height="0.2" Width="570" Fill="{DynamicResource atv_rectangles_shadow}" HorizontalAlignment="Center">
                    <Rectangle.Effect>
                        <BlurEffect/>
                    </Rectangle.Effect>
                </Rectangle>

                <TextBlock Text="{DynamicResource sv_title_extended}" 
                           VerticalAlignment="Center" Opacity="0.9"
                           FontFamily="Cascadia Mono"  FontSize="20" Margin="5 0 0 0"  Foreground="{DynamicResource second_settings_text}"/>

                <!-- Custom steam web api key -->
                <StackPanel Orientation="Horizontal" Margin="0 0 0 0">
                    <TextBlock Text="{DynamicResource sv_steam_key}" Style="{StaticResource settingTextBlock}"/>
                    <Border Background="{DynamicResource first_main_color}" Height="35"
                    Width="250" CornerRadius="5" Margin="6 5 0 5" BorderThickness="0.7" BorderBrush="{DynamicResource buttons_border_brush}">
                        <StackPanel Orientation="Horizontal" Margin="10 5 10 5">
                            <Icon:PackIconMaterial x:Name="apiIcon" Kind="Api" Foreground="{DynamicResource settings_buttons_isMouseOver}"
                                           VerticalAlignment="Center" Height="20" Width="20" />

                            <TextBox Margin="5 0 0 0" Width="205"  Foreground="{DynamicResource settings_buttons_isUncheckedText}"
                         Text="{Binding WebApiKey, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"
                         Background="{DynamicResource first_main_color}" MaxLength="32" BorderThickness="0" CaretBrush="White" />
                        </StackPanel>
                    </Border>

                    <Button x:Name="apiKeyInfo" Style="{StaticResource serviceButton}"  Margin="8 7 0 7" Width="22" Height="22" 
                    VerticalAlignment="Center" Background="Transparent" BorderThickness="0"
                    Command="{Binding OpenApiKeyUrlCommand}"
                    MouseEnter="apiKeyInfo_MouseEnter" MouseLeave="PopupLeave_MouseLeave">
                        <Icon:PackIconMaterial Width="20" Height="20" Kind="Information"/>
                    </Button>

                    <Button x:Name="ErrorApiKey" Style="{StaticResource ErrorAlert}" 
                    MouseEnter="ErrorApiKey_MouseEnter" MouseLeave="PopupLeave_MouseLeave"
                    Margin="5 7 0 7" Width="18" Height="18" Visibility="{Binding ApiKeyError,Converter={StaticResource BoolToVis},UpdateSourceTrigger=PropertyChanged}"
                    VerticalAlignment="Center" Background="Transparent" BorderThickness="0">
                        <Icon:PackIconMaterial Width="15" Height="15" Kind="Alert"/>
                    </Button>

                </StackPanel>

                <!-- Custom steam web api key -->
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{DynamicResource sv_crypto_key}" Style="{StaticResource settingTextBlock}"/>
                    <Border Background="{DynamicResource first_main_color}" Height="35"
                    Width="275" CornerRadius="5" Margin="6 5 0 5" BorderThickness="0.7" BorderBrush="{DynamicResource buttons_border_brush}">
                        <StackPanel Orientation="Horizontal" Margin="10 5 10 5">

                            <Icon:PackIconMaterial Kind="ShieldKeyOutline" Foreground="{DynamicResource settings_buttons_isMouseOver}"
                                           VerticalAlignment="Center" Height="20" Width="20" />

                            <TextBox Margin="5 0 0 0" Width="235"  Foreground="{DynamicResource settings_buttons_isUncheckedText}"
                         Text="{Binding EncryptingKey, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" IsReadOnly="True"
                         Background="{DynamicResource first_main_color}" MaxLength="32" BorderThickness="0" CaretBrush="White" />
                        </StackPanel>
                    </Border>

                    <Button x:Name="CryptoKeyInfo" Style="{StaticResource serviceButton}"  Margin="8 7 0 7" Width="22" Height="22" 
                    VerticalAlignment="Center" Background="Transparent" BorderThickness="0"
                    MouseEnter="CryptoKeyInfo_MouseEnter" MouseLeave="PopupLeave_MouseLeave">
                        <Icon:PackIconMaterial Width="20" Height="20" Kind="Information"/>
                    </Button>

                    <Button x:Name="GenerateKey" Style="{StaticResource ErrorAlert}" Foreground="{DynamicResource menu_button_background}" 
                    MouseEnter="GenerateKey_MouseEnter" MouseLeave="PopupLeave_MouseLeave"
                    Margin="5 7 0 7" Width="18" Height="18" VerticalAlignment="Center"
                    Command="{Binding GenerateCryptoKeyCommand}" Background="Transparent" BorderThickness="0">
                        <Icon:PackIconMaterial Width="15" Height="15" Kind="RefreshCircle"/>
                    </Button>

                    <Button x:Name="ResetKey" Style="{StaticResource ErrorAlert}" Foreground="DarkOrange" 
                    MouseEnter="ResetKey_MouseEnter" MouseLeave="PopupLeave_MouseLeave"
                    Margin="5 7 0 7" Width="18" Height="18" VerticalAlignment="Center"
                    Command="{Binding ResetCryptoKeyCommand}" Background="Transparent" BorderThickness="0">
                        <Icon:PackIconMaterial Width="15" Height="15" Kind="LockReset"/>
                    </Button>

                </StackPanel>

                <!--Close action after logging -->
                <StackPanel Orientation="Horizontal" Margin="0 5 0 0">
                    <TextBlock Text="{DynamicResource sv_action_after_logging}" 
                       Style="{StaticResource settingTextBlock}"/>
                    <ComboBox Margin="10 0 0 0" Width="150" Height="27" SelectedIndex="{Binding ActionAfterLogin}" ItemsSource="{DynamicResource sv_actions_after_logging_list}"/>
                </StackPanel>

                <!--Close action after logging -->
                <StackPanel Orientation="Horizontal" Margin="0 5 0 0">
                    <TextBlock Text="{DynamicResource sv_paste2fa_method}" 
                       Style="{StaticResource settingTextBlock}"/>
                    <ComboBox Margin="10 0 0 0" Width="150" Height="27" SelectedIndex="{Binding TwoFactorInputMethod}" ItemsSource="{DynamicResource sv_2fa_input_list}"/>
                </StackPanel>




                <Rectangle Margin="0 12 0 15" Height="0.2" Width="570" Fill="{DynamicResource atv_rectangles_shadow}" HorizontalAlignment="Center">
                    <Rectangle.Effect>
                        <BlurEffect/>
                    </Rectangle.Effect>
                </Rectangle>

                <TextBlock Text="{DynamicResource sv_title_general}" 
                           VerticalAlignment="Center" Opacity="0.9"
                           FontFamily="Cascadia Mono"  FontSize="20" Margin="5 0 0 0"  Foreground="{DynamicResource second_settings_text}"/>

                <!-- Delete without confirmation -->  
                <DockPanel  Margin="0 5 0 0">
                    <TextBlock Text="{DynamicResource sv_confirm_when_del}" Style="{StaticResource settingTextBlock}"/>
                    <ToggleButton IsChecked="{Binding NoConfirmMode}"
                          Style="{StaticResource ToggleButtonStyle}"/>
                </DockPanel>

                <!-- Dont collect information -->
                <DockPanel>
                    <TextBlock Text="{DynamicResource sv_info_collect}" Style="{StaticResource settingTextBlock}"/>
                    <ToggleButton IsChecked="{Binding TakeAccountInfoMode}"
                          Style="{StaticResource ToggleButtonStyle}"/>
                </DockPanel>

                <!-- Remember password -->
                <DockPanel>
                    <TextBlock Text="{DynamicResource sv_rememberPass}" Style="{StaticResource settingTextBlock}"/>
                    <ToggleButton IsChecked="{Binding RememberPassword}"
                          Style="{StaticResource ToggleButtonStyle}"/>
                </DockPanel>

                <DockPanel>
                    <TextBlock Text="{DynamicResource sv_getID}" Style="{StaticResource settingTextBlock}"/>
                    <ToggleButton IsChecked="{Binding AutoGetSteamId}"
                          Style="{StaticResource ToggleButtonStyle}"/>
                </DockPanel>

                <!--Set password-->
                <DockPanel Grid.Row="8">
                    <TextBlock Text="{DynamicResource sv_password}" Style="{StaticResource settingTextBlock}"/>
                    <Button x:Name="PasswordError" Style="{StaticResource ErrorAlert}" 
                    MouseEnter="PasswordError_MouseEnter" MouseLeave="PopupLeave_MouseLeave"
                    Margin="8 7 0 7" Width="18" Height="18" Visibility="{Binding PasswordError,Converter={StaticResource BoolToVis},UpdateSourceTrigger=PropertyChanged}"
                    VerticalAlignment="Center" Background="Transparent" BorderThickness="0">

                        <Icon:PackIconMaterial Width="15" Height="15" Kind="Alert"/>
                    </Button>
                    <ToggleButton  IsChecked="{Binding PasswordEnabled,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                          Style="{StaticResource ToggleButtonStyle}" Command="{Binding ChangeOrAddPasswordCommand}"
                                   CommandParameter="{Binding ElementName=PasswordPanel}"/>

                </DockPanel>

                <StackPanel x:Name="PasswordPanel" Orientation="Horizontal" Margin="20 0 0 0" Visibility="Collapsed">
                    <TextBlock Text="{DynamicResource sv_newPass}" Style="{StaticResource settingTextBlock}"/>
                    <Border Margin="10 5 0 0" Background="{DynamicResource first_main_color}"
                    Width="250" CornerRadius="5" Height="35" BorderThickness="0.7" HorizontalAlignment="Left"
                    BorderBrush="{DynamicResource buttons_border_brush}">
                        <StackPanel Orientation="Horizontal" Margin="10 5 10 5">

                            <Icon:PackIconMaterial Kind="Key" Foreground="{DynamicResource settings_buttons_isMouseOver}"
                                           VerticalAlignment="Center" Height="20" Width="20" />
                            <theme:MainPasswordBox  Width="195" Style="{StaticResource PasswordboxTheme}" 
                                                Height="20" VerticalAlignment="Center" Password="{Binding Password}"/>
                        </StackPanel>
                    </Border>

                </StackPanel>

                
                
                
                <Rectangle Margin="0 12 0 15" Height="0.2" Width="570" Fill="{DynamicResource atv_rectangles_shadow}" HorizontalAlignment="Center">
                    <Rectangle.Effect>
                        <BlurEffect/>
                    </Rectangle.Effect>
                </Rectangle>

                <TextBlock Text="{DynamicResource sv_title_system}" 
                           VerticalAlignment="Center" Opacity="0.9"
                           FontFamily="Cascadia Mono"  FontSize="20" Margin="5 0 0 0"  Foreground="{DynamicResource second_settings_text}"/>

                <!-- Minimize to tray -->
                <DockPanel  Margin="0 5 0 0">
                    <TextBlock Text="{DynamicResource sv_minimizeOnClose}" Style="{StaticResource settingTextBlock}"/>
                    <ToggleButton IsChecked="{Binding MinimizeToTray}" VerticalAlignment="Center"
                          Style="{StaticResource checkbox}" Margin="0 0 150 0"  HorizontalAlignment="Right" Width="27" Height="27"/>
                </DockPanel>

                <!-- Minimize app on startup -->
                <DockPanel Margin="0 5 0 0">
                    <TextBlock Text="{DynamicResource sv_minimizeAtStart}" Style="{StaticResource settingTextBlock}"/>
                    <ToggleButton IsChecked="{Binding MinimizeOnStart}" VerticalAlignment="Center"
                          Style="{StaticResource checkbox}" Margin="0 0 150 0"  HorizontalAlignment="Right"  Width="27" Height="27"/>
                </DockPanel>

                <!-- Set in autostartup -->
                <DockPanel Margin="0 5 0 0">
                    <TextBlock Text="{DynamicResource sv_autoStartup}" Style="{StaticResource settingTextBlock}"/>
                    <ToggleButton IsChecked="{Binding Autostartup}" VerticalAlignment="Center"
                          Style="{StaticResource checkbox}"  Margin="0 0 150 0"  HorizontalAlignment="Right"  Width="27" Height="27"/>
                </DockPanel>

                <DockPanel Margin="0 5 0 0">
                    <TextBlock Text="{DynamicResource sv_automaticLogin}" Style="{StaticResource settingTextBlock}"/>
                    <StackPanel Orientation="Horizontal" Margin="0 0 125 0" HorizontalAlignment="Right">
                        <ComboBox x:Name="autoLogin"  ItemsSource="{Binding AutoLoginUsers}"
                              Width="170" SelectedItem="{Binding AutoLoginAccount}" />
                        <Button Style="{StaticResource defaultButton}" Width="25" Height="25" VerticalAlignment="Center" HorizontalAlignment="Left"
                            Background="Transparent" Margin="2 0 0 0" BorderBrush="Transparent" Command="{Binding ClearAutoLoginAccount}">
                            <Icon:PackIconMaterial Kind="Close" Padding="3"/>
                        </Button>
                    </StackPanel>

                </DockPanel>

            </StackPanel>
        </ScrollViewer>

        <Button Grid.Row="2" Width="200" Margin="0 10 0 0" Style="{StaticResource defaultButton}" Content="{DynamicResource sv_save_changes}" Cursor="Hand"
                Command="{Binding SaveChangesCommand}"
                CommandParameter="{Binding ElementName=succesSave}"/>

            <TextBlock Foreground="{DynamicResource default_foreground}" Opacity="0.4" Margin="0 0 20 0"
                       Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                               FontSize="12" Text="{Binding Version, StringFormat=Version: {0}}" />


        <Icon:PackIconMaterial x:Name="succesSave" Grid.Row="2" Kind="Check"  Width="25" Height="25"
                               VerticalAlignment="Center" Margin="240 10 0 0" Opacity="0" HorizontalAlignment="Center"
                               Foreground="{DynamicResource AcidGrad}"/>
    </Grid>
</UserControl>
