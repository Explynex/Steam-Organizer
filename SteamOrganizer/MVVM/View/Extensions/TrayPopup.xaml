<Popup x:Class="SteamOrganizer.MVVM.View.Extensions.TrayPopup"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
       xmlns:Local="clr-namespace:SteamOrganizer.MVVM.View.Extensions"
       d:DataContext="{d:DesignInstance Local:TrayPopup}"
      mc:Ignorable="d" 
       AllowsTransparency="True"
       PopupAnimation="Fade" 
      Width="240" >
    <Popup.Resources>
        <Style x:Key="TrayButton" TargetType="Button">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="Padding" Value="10 0 10 0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <StackPanel x:Name="Panel" Orientation="Horizontal" Background="Transparent">
                            <Icon:PackIconMaterial Kind="{TemplateBinding Tag}"
                                                   x:Name="Icon"
                                                   Width="22" Height="22"
                                                   Foreground="{DynamicResource PrimaryForegroundBrush}"
                                                   Padding="2" Margin="15 0 10 0"
                                                   VerticalAlignment="Center"/>
                            <TextBlock Text="{TemplateBinding Content}" FontWeight="Medium"
                                       Margin="0 0 15 0" x:Name="Text"
                                       Foreground="{DynamicResource PrimaryForegroundBrush}" 
                                       VerticalAlignment="Center"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Panel" Property="Background" Value="{DynamicResource TertiaryBackgroundBrush}"/>
                                <Setter TargetName="Text" Property="Foreground" Value="{DynamicResource SecondaryForegroundBrush}"/>
                                <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource LightBlueGrad}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Popup.Resources>

    <Border Background="{DynamicResource SecondaryBackgroundBrush}"
            d:Effect="{x:Null}"
            CornerRadius="3" Effect="{StaticResource LightShadow}" Margin="3">
        <StackPanel VerticalAlignment="Bottom" Margin="0 0 0 3">

            <ListBox x:Name="RecentlyList"  Background="Transparent"
                     BorderBrush="{DynamicResource PrimaryBackgroundBrush}"
                     SelectionMode="Single" 
                     Foreground="{DynamicResource PrimaryForegroundBrush}" 
                     d:ItemsSource="{d:SampleData ItemCount=5}">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="FontSize" Value="13"/>
                        <Setter Property="FontWeight" Value="Medium"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">

                                    <TextBlock Name="Border" Padding="15 7 15 7"
                                                   Text="{Binding Item1,Mode=OneWay}" />

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource ResourceKey=TertiaryBackgroundBrush}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource SecondaryForegroundBrush}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.Style>
                    <Style TargetType="ListBox">
                        <Setter Property="BorderThickness" Value="0 3 0 0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding HasItems, RelativeSource={RelativeSource Self}}" Value="False">
                                <Setter Property="BorderThickness" Value="0 0 0 0"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.Style>
            </ListBox>

            <Grid>
                <Button x:Name="NotifyButton" Style="{StaticResource TrayButton}" Height="45"
                    Content="Notifications" Click="OnSettingNotificationsMode"/>

             
            </Grid>


            <Rectangle Fill="{DynamicResource PrimaryBackgroundBrush}" Height="3"/>

            <Button Style="{StaticResource TrayButton}"
                    Click="HideShowClick"
                    Tag="{x:Static Icon:PackIconMaterialKind.DockWindow}"
                    Content="Show/Hide"/>

            <Button Style="{StaticResource TrayButton}"
                    Click="SettingsClick"
                    Tag="{x:Static Icon:PackIconMaterialKind.CogOutline}"
                    Content="Settings"/>

            <Rectangle Fill="{DynamicResource PrimaryBackgroundBrush}" Height="3"/>

            <Button Style="{StaticResource TrayButton}" 
                    Content="Quit" Click="ShutdownClick"
                    Tag="{x:Static Icon:PackIconMaterialKind.LocationExit}"/>
        </StackPanel>
    </Border>
</Popup>