<UserControl x:Class="SteamOrganizer.MVVM.View.Controls.AccountsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModels="clr-namespace:SteamOrganizer.MVVM.ViewModels"
             xmlns:local="clr-namespace:SteamOrganizer.MVVM.View.Controls"
             xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:virtualizingPanel="clr-namespace:WpfToolkit.Controls;assembly=VirtualizingWrapPanel"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="900"
             d:DataContext="{d:DesignInstance viewModels:AccountsViewModel}">
    <UserControl.Resources>
        <Style x:Key="AccountInfoChip" TargetType="Border">
            <Setter Property="Padding" Value="10 2 10 2"/>
            <Setter Property="CornerRadius" Value="5"/>
            <Setter Property="Margin" Value="0 0 5 3"/>
            <Setter Property="ToolTipService.InitialShowDelay" Value="200"/>
        </Style>

        <sys:Int32 x:Key="MoreTheAccs">1</sys:Int32>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="55"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <FrameworkElement x:Name="GrabbingCur" Cursor="/SteamOrganizer;component/Resources/grabbing.cur" Visibility="Collapsed" IsEnabled="False"/>

        <StackPanel HorizontalAlignment="Left" Margin="20 0 0 0"
                    VerticalAlignment="Center" Orientation="Horizontal">
            <Grid>
                <Icon:PackIconMaterial x:Name="RefredhDbButton" d:Spin="False">
                    <Icon:PackIconMaterial.Style>
                        <Style TargetType="Icon:PackIconMaterial">
                            <Setter Property="ToolTipService.InitialShowDelay" Value="200"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Spin" Value="True"/>
                            <Setter Property="Visibility" Value="Visible"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter Property="ToolTip" Value="Accounts are being updated... Click to cancel"/>
                            <Setter Property="Kind" Value="Autorenew"/>
                            <Setter Property="Width" Value="35"/>
                            <Setter Property="Height" Value="35"/>
                            <Setter Property="SpinDuration" Value="1.5"/>
                            <Setter Property="Foreground" Value="{DynamicResource SuccessGrad}"/>
                            <Setter Property="SpinEasingFunction" Value="{StaticResource BaseAnimationFunction}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RemainingUpdateCount,Mode=OneWay}" Value="{x:Null}">
                                    <Setter Property="Height" Value="20"/>
                                    <Setter Property="Width" Value="20"/>
                                    <Setter Property="Kind" Value="DatabaseRefreshOutline"/>
                                    <Setter Property="ToolTip" Value="Click for update all accounts"/>
                                    <Setter Property="Spin" Value="False"/>
                                    <Setter Property="Foreground" Value="{DynamicResource SecondaryForegroundBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Accounts.Count,Mode=OneWay}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Accounts.Count,Mode=OneWay}" Value="1">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Icon:PackIconMaterial.Style>
                    <Icon:PackIconMaterial.InputBindings>
                        <MouseBinding Gesture="LeftClick"
                                  Command="{Binding UpdateAccountsCommand,Mode=OneTime}"/>
                    </Icon:PackIconMaterial.InputBindings>
                </Icon:PackIconMaterial>

                <TextBlock HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       IsHitTestVisible="False"
                       Foreground="{DynamicResource TertiaryForegroundBrush}"
                       FontSize="8" Text="{Binding RemainingUpdateCount,Mode=OneWay}"
                       MaxWidth="17"
                       TextTrimming="CharacterEllipsis"/>
            </Grid>


            <Icon:PackIconMaterial Kind="DatabaseArrowDownOutline" 
                                   ToolTipService.InitialShowDelay="200"
                                   ToolTip="Export accounts database"
                                   Visibility="{Binding ElementName=RefredhDbButton,Path=Visibility,Mode=OneWay}"
                                   Background="Transparent" Cursor="Hand"
                                   Margin="5 0 0 0" Height="20" Width="20"
                                   Foreground="{DynamicResource SecondaryForegroundBrush}">
                <Icon:PackIconMaterial.InputBindings>
                    <MouseBinding Gesture="LeftClick" Command="{Binding ExportDatabaseCommand,Mode=OneTime}"/>
                </Icon:PackIconMaterial.InputBindings>
            </Icon:PackIconMaterial>

            <Icon:PackIconMaterial Kind="DatabaseArrowUpOutline"
                                   ToolTipService.InitialShowDelay="200"
                                   ToolTip="Import accounts database"
                                   Background="Transparent" Cursor="Hand"
                                   Margin="5 0 0 0" Height="20" Width="20"
                                   Foreground="{DynamicResource SecondaryForegroundBrush}">
                <Icon:PackIconMaterial.InputBindings>
                    <MouseBinding Gesture="LeftClick" Command="{Binding ImportDatabaseCommand,Mode=OneTime}"/>
                </Icon:PackIconMaterial.InputBindings>
            </Icon:PackIconMaterial>

        </StackPanel>




        <StackPanel HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Orientation="Horizontal">
            
            <Border Margin="0 0 10 0"
                    CornerRadius="20 12 12 20"
                    Background="{DynamicResource SecondaryBackgroundBrush}">
                <Border.Resources>
                    <Icon:PackIconMaterial x:Key="Checked" Kind="CheckboxMarkedOutline"/> 
                    <Icon:PackIconMaterial x:Key="Unchecked" Kind="SquareEditOutline"/>
                </Border.Resources>
                <ToggleButton x:Name="AllowChanges"
                              IsHitTestVisible="{Binding Accounts.Count,Converter={StaticResource ToBooleanConverter},ConverterParameter={StaticResource MoreTheAccs}}"
                              Style="{StaticResource DynamicContentButton}"
                              Content="{StaticResource Unchecked}"
                              Padding="20 0 20 0"
                              Tag="{StaticResource Checked}">
                </ToggleButton>
            </Border>


            <TextBox Padding="0 0 23 0" 
                 MaxLength="60"
                 Uid="Search . . ." 
                 Text="{Binding SearchBarText,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                 Tag="{Binding ClearSearchBar,Mode=OneTime}"
                 Style="{StaticResource SearchTextBox}" 
                 HorizontalAlignment="Center"
                 Foreground="{DynamicResource SecondaryForegroundBrush}"
                 Background="{DynamicResource SecondaryBackgroundBrush}"
                 MinWidth="400"/>

            <Button Style="{StaticResource TransparentButton}"
                    Command="{Binding AddAccountCommand,Mode=OneTime}"
                    Margin="10 0 0 0"
                    Padding="20 0 20 0"
                    Foreground="{DynamicResource LightBlueGrad}"
                    Background="{DynamicResource TertiaryBackgroundBrush}">
                <Button.Resources>
                    <CornerRadius x:Key="Corner" TopLeft="12" TopRight="20" BottomRight="20" BottomLeft="12"/>
                </Button.Resources>
                <Icon:PackIconMaterial Kind="Plus"/>
            </Button>

        </StackPanel>

        <StackPanel Margin="0 0 5 0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Orientation="Horizontal">
            <StackPanel.Resources>

                <Icon:PackIconMaterial x:Key="Descending" Kind="SortAscending" />
                <Icon:PackIconMaterial RenderTransformOrigin="0.5 0.5" x:Key="Ascending" Kind="SortAscending" RotationAngle="180">
                    <Icon:PackIconMaterial.RenderTransform>
                        <ScaleTransform ScaleX="-1"/>
                    </Icon:PackIconMaterial.RenderTransform>
                </Icon:PackIconMaterial>
            </StackPanel.Resources>
            <ComboBox x:Name="SortComboBox" 
                      Width="105" Height="30" 
                      Tag="Sort by"
                     SelectedIndex="{Binding SortByIndex,Mode=OneWayToSource}">
                <ComboBoxItem Content="None"/>
                <ComboBoxItem Content="Creation date"/>
                <ComboBoxItem Content="Date added"/>
                <ComboBoxItem Content="Last update"/>
                <ComboBoxItem Content="Level"/>
            </ComboBox>

            <ToggleButton Width="30" Style="{StaticResource DynamicContentButton}"
                          IsChecked="{Binding SortDirection}"
                          Content="{StaticResource Descending}"
                          Tag="{StaticResource Ascending}" Margin="10 2 0 0">
            </ToggleButton>

        </StackPanel>


        <ListBox x:Name="AccountsBox"
                 Grid.Row="1"
                 Background="Transparent"
                 Margin="7 0 0 10"
                 Padding="0 0 7 0"
                 BorderThickness="0"
                 ItemsSource="{Binding Accounts,Mode=OneWay}"
                 VirtualizingPanel.CacheLengthUnit="Page"
                 VirtualizingPanel.VirtualizationMode="Recycling"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 d:ItemsSource="{d:SampleData ItemCount=3}">
            <ListBox.Resources>
                <Style x:Key="Badge" TargetType="Icon:PackIconMaterial">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Height" Value="13"/>
                    <Setter Property="ToolTipService.InitialShowDelay" Value="200"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Tag,RelativeSource={RelativeSource Self},Mode=OneWay}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListBox.Resources>

            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Border CornerRadius="3" MinWidth="400" Height="105"
                            Background="{DynamicResource SecondaryBackgroundBrush}"
                            Padding="15"
                            Margin="3 0 3 6"
                            DragEnter="Border_DragEnter"
                            DragLeave="Border_DragLeave"
                            QueryContinueDrag="Border_QueryContinueDrag"
                            AllowDrop="True">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="BorderBrush" Value="{DynamicResource PurpleGradient}"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=AllowChanges,Path=IsChecked,Mode=OneWay}" Value="True"/>
                                            <Condition Binding="{Binding Pinned,Mode=OneWay}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="BorderBrush" Value="Gold"/>
                                            <Setter Property="BorderThickness" Value="1.5"/>
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>

                        <DockPanel>

                            <!--#region Avatar -->
                            <Border BorderBrush="{DynamicResource LightBlueGrad}"
                                    ToolTipService.InitialShowDelay="400"
                                     HorizontalAlignment="Left" 
                                     BorderThickness="2"
                                     CornerRadius="50"
                                     Width="60" Height="60"
                                    Cursor="Hand"
                                    MouseEnter="AvatarMouseOver">
                                <Border.InputBindings>
                                    <MouseBinding Gesture="LeftClick"
                                                  Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}, Path=DataContext.OpenProfileCommand,Mode=OneTime}"
                                                  CommandParameter="{Binding}"/>
                                </Border.InputBindings>
                                <Border.Background>
                                    <ImageBrush ImageSource="{Binding AvatarBitmap,Mode=OneWay}" />
                                </Border.Background>
                            </Border>
                            <!--#endregion-->


                            <!--#region Top dock panel -->
                            
                            <DockPanel  DockPanel.Dock="Top">

                                <TextBlock Text="{Binding Nickname,Mode=OneWay}" Margin="10 0 10 0"
                                           Foreground="{DynamicResource TertiaryForegroundBrush}"
                                           FontWeight="Medium"
                                           FontSize="15"  />

                                <Button Style="{StaticResource TransparentButton}"
                                        Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}, Path=DataContext.OpenAccountPageCommand,Mode=OneTime}"
                                        CommandParameter="{Binding}"
                                        Background="{DynamicResource PrimarySubBrush}">
                                    <Icon:PackIconMaterial Kind="Pen" Width="13" Height="13"
                                                           Foreground="{DynamicResource TertiaryForegroundBrush}"/>
                                </Button>

                                <Button Style="{StaticResource TransparentButton}"
                                        Margin="5 0 0 0"
                                        Background="{DynamicResource PrimarySubBrush}">
                                    <Icon:PackIconMaterial Kind="Login" Width="13" Height="13"/>
                                </Button>

                                <!-- If anonymous account -->
                                <Icon:PackIconMaterial Kind="Incognito" Height="13" VerticalAlignment="Center"
                                                       ToolTip="{DynamicResource acv_anonBadgeTip}"
                                                       ToolTipService.InitialShowDelay="200"
                                                       Visibility="{Binding AccountID,Converter={StaticResource ToVisibilityInvertedConverter}}"
                                                       Foreground="{DynamicResource WarningBrush}" 
                                                       Margin="10 0 -5 0"/>

                                <!-- If linked 2fa -->
                                <Icon:PackIconMaterial Kind="Lock" 
                                                       Style="{StaticResource Badge}"
                                                       Tag="{Binding Authenticator,Mode=OneWay}"
                                                       Cursor="Hand"
                                                       MouseLeftButtonDown="CopyAuthCode_MouseLeftButtonDown"
                                                       d:Visibility="Collapsed"
                                                       ToolTip="{DynamicResource acv_2faBadgeTip}"
                                                       Margin="10 0 0 0"
                                                       Foreground="SpringGreen"/>


                                <Grid HorizontalAlignment="Right">

                                    <Icon:PackIconMaterial
                                       d:Visibility="Collapsed"
                                       Visibility="{Binding ElementName=AllowChanges,Path=IsChecked,Converter={StaticResource ToVisibilityConverter},Mode=OneWay}"
                                       GiveFeedback        ="DragItemGiveFeedback"
                                       MouseLeftButtonDown ="OnDragItemInitilize" 
                                       Cursor              ="/SteamOrganizer;component/Resources/grab.cur"      
                                       Kind                ="Drag"       
                                       Background="Transparent"   
                                       Foreground          ="{DynamicResource PrimaryForegroundBrush}"
                                    />

                                    <Icon:PackIconMaterial
                                        Visibility="{Binding ElementName=AllowChanges,Path=IsChecked,Converter={StaticResource ToVisibilityInvertedConverter},Mode=OneWay}"
                                       Kind="Pin"
                                       Background="Transparent"
                                       Cursor="Hand">
                                        <Icon:PackIconMaterial.Style>
                                            <Style TargetType="{x:Type Icon:PackIconMaterial}">
                                                <Setter Property="RotationAngle" Value="30"/>
                                                <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundBrush}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Pinned}" Value="True">
                                                        <Setter Property="RotationAngle" Value="0"/>
                                                        <Setter Property="Foreground" Value="Gold"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Icon:PackIconMaterial.Style>
                                        <Icon:PackIconMaterial.InputBindings>
                                            <MouseBinding Gesture="LeftClick"
                                                      Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}, Path=DataContext.PinAccountCommand,Mode=OneTime}"
                                                          CommandParameter="{Binding}"/>
                                        </Icon:PackIconMaterial.InputBindings>
                                    </Icon:PackIconMaterial>
                                    
                                </Grid>


                            </DockPanel>
                            
                            <!--#endregion-->

                            <!--#region Level, years, ID -->
                            <WrapPanel HorizontalAlignment="Left"
                                       MaxWidth="230" Margin="10 7 0 0" >

                                <Border Style="{StaticResource AccountInfoChip}"
                                        Background="{DynamicResource SecondarySubBrush}" >
                                    <TextBlock FontWeight="Bold" 
                                               Foreground="{DynamicResource SecondaryBackgroundBrush}">
                                        <Run Text="Level:"/>
                                        <Run Text="{Binding SteamLevel,TargetNullValue=N/A,Mode=OneWay}"/>
                                    </TextBlock>
                                </Border>

                                <Border Style="{StaticResource AccountInfoChip}" 
                                        Background="{DynamicResource SecondarySubBrush}" 
                                        MouseEnter="YearsOfServiceMouseOver">
                                    <TextBlock FontWeight="Bold" 
                                               Foreground="{DynamicResource SecondaryBackgroundBrush}">
                                        <Run Text="{DynamicResource acv_yearsOf}"/>
                                        <Run Text="{Binding YearsOfService,TargetNullValue=N/A,Mode=OneWay,StringFormat={}{0:0.00}}"/>
                                    </TextBlock>
                                </Border>


                                <TextBlock Foreground="{DynamicResource SecondaryForegroundBrush}"
                                           IsHitTestVisible="{Binding IsFullyParsed,Mode=OneWay}"
                                           Width="100" Cursor="Hand" MouseLeftButtonDown="CopyID_MouseLeftButtonDown">
                                    <Run Text="ID:" FontWeight="Medium" Foreground="{DynamicResource PrimarySubBrush}"/>
                                    <Run Text="{Binding AccountID,Mode=OneWay,TargetNullValue=—}"/>
                                </TextBlock>


                            </WrapPanel>
                            <!--#endregion-->

                            <!--#region Bans -->
                            
                            <WrapPanel Orientation="Horizontal" 
                                       MaxWidth="150"
                                       HorizontalAlignment="Left" 
                                       Margin="10 7 0 0">

                                <Border Background="{DynamicResource ErrorBrush}"
                                        Visibility="{Binding VacBansCount,Converter={StaticResource ToVisibilityConverter}}"
                                        Style="{StaticResource AccountInfoChip}">
                                    <TextBlock Text="VAC" 
                                               FontWeight="Bold" 
                                               Foreground="{DynamicResource SecondaryBackgroundBrush}"/>
                                </Border>

                                <Border Background="{DynamicResource ErrorBrush}"
                                        Style="{StaticResource AccountInfoChip}"
                                        ToolTip="{DynamicResource acv_communityBannedTip}"
                                        Visibility="{Binding HaveCommunityBan,Converter={StaticResource ToVisibilityConverter}}">
                                    <TextBlock Text="Community" 
                                               FontWeight="Bold" 
                                               Foreground="{DynamicResource SecondaryBackgroundBrush}"/>
                                </Border>

                                <Border Background="{DynamicResource ErrorBrush}"  
                                        Style="{StaticResource AccountInfoChip}"
                                        Visibility="{Binding GameBansCount,Converter={StaticResource ToVisibilityConverter},Mode=OneWay}">
                                    <TextBlock Text="Game" 
                                               FontWeight="Bold" 
                                               Foreground="{DynamicResource SecondaryBackgroundBrush}"/>
                                </Border>


                                <Border Background="{DynamicResource ErrorBrush}" 
                                        Style="{StaticResource AccountInfoChip}"
                                        Visibility="{Binding EconomyBan,Converter={StaticResource ToVisibilityConverter},Mode=OneWay}">
                                    <TextBlock Text="Economy" 
                                               FontWeight="Bold" 
                                               Foreground="{DynamicResource SecondaryBackgroundBrush}"/>
                                </Border>


                            </WrapPanel>
                            
                            <!--#endregion-->

                            <Button HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"
                                    Padding="0"
                                    Foreground="{DynamicResource PrimaryForegroundBrush}"
                                    Style="{StaticResource TransparentButton}"
                                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}, Path=DataContext.RemoveAccountCommand,Mode=OneTime}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                                <Icon:PackIconMaterial>
                                    <Icon:PackIconMaterial.Style>
                                        <Style TargetType="{x:Type Icon:PackIconMaterial}">
                                            <Setter Property="Kind" Value="Delete"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Foreground" Value="PaleVioletRed"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Icon:PackIconMaterial.Style>
                                </Icon:PackIconMaterial>
                            </Button>
                        </DockPanel>

                    </Border>
                </DataTemplate>
            </ListBox.ItemTemplate>

            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <virtualizingPanel:VirtualizingWrapPanel 
                    Orientation="Horizontal" SpacingMode="None" StretchItems="True"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
        </ListBox>

        <Grid HorizontalAlignment="Center" 
              VerticalAlignment="Top"
              d:Visibility="Collapsed"
              Grid.Row="1"
              Margin="0 10 0 0"
              Visibility="{Binding Accounts.Count,Converter={StaticResource ToVisibilityInvertedConverter}}">
            <Icon:PackIconMaterial Kind="ArrowUpRight" Margin="440 0 0 0"
                                   Width="100" Height="100"
                                   Foreground="{DynamicResource PrimaryForegroundBrush}"/>
            <TextBlock 
                Foreground="{DynamicResource PrimaryForegroundBrush}"
                FontSize="35" Width="330" TextWrapping="Wrap"
                TextAlignment="Center" VerticalAlignment="Top"
                FontWeight="Bold" Margin="0 40 0 0"
                Text="{DynamicResource acv_noAccounts}"/>
        </Grid>
        
    </Grid>

    
</UserControl>
