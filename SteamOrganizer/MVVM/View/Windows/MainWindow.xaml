<Window  x:Class="SteamOrganizer.MVVM.View.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:ext="clr-namespace:SteamOrganizer.MVVM.View.Extensions"
        xmlns:viewModels="clr-namespace:SteamOrganizer.MVVM.ViewModels"
        mc:Ignorable="d" 
        WindowStartupLocation="CenterScreen"
        Title="Steam Organizer"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        WindowState="Normal"
        MinHeight="500" MinWidth="900"
        d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel}">
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="1"/>
    </WindowChrome.WindowChrome>

    
    <Border x:Name="MainBorder" Background="{DynamicResource PrimaryBackgroundBrush}" d:CornerRadius="9" >
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Popup x:Name="Notifications"  Width="240" Height="150"
                  StaysOpen="False" AllowsTransparency="True"
                   PopupAnimation="Slide" VerticalOffset="5">
                <Border Effect="{StaticResource LightShadow}" Margin="3"
                        CornerRadius="3" Background="{DynamicResource SecondaryBackgroundBrush}">
                    
                </Border>
            </Popup>


            <Border x:Name="TopPanel" 
                    d:CornerRadius="9 9 0 0" 
                    Grid.ColumnSpan="2" 
                    BorderThickness="0 0 0 1.5"  
                    BorderBrush="{DynamicResource PrimaryBorderBrush}"
                    Background="{DynamicResource SecondaryBackgroundBrush}"
                    MouseLeftButtonDown="OnDragMove"/>


            <Border x:Name="Sidebar"
                    Width="200"
                    d:CornerRadius="0 0 0 9"
                    Background="{DynamicResource SecondaryBackgroundBrush}" 
                    Grid.Row="1"
                    BorderThickness="0 0 1.5 0"
                    BorderBrush="{DynamicResource PrimaryBorderBrush}">
                <StackPanel>
                    <RadioButton IsChecked="True"  Style="{StaticResource MenuRadioButton}" Tag="{DynamicResource word_accs}">
                        <Icon:PackIconMaterial Kind="AccountGroupOutline" Height="23" Width="23" />
                    </RadioButton>

                    <RadioButton  Style="{StaticResource MenuRadioButton}" Tag="{DynamicResource word_rmtControl}">
                        <Icon:PackIconMaterial Kind="RemoteDesktop" Height="23" Width="23" />
                    </RadioButton>
                </StackPanel>
            </Border>

            <Border Background          ="Transparent"
                    Grid.Column         ="1" Grid.Row="1"
                    MinWidth            ="8"
                    HorizontalAlignment ="Left"
                    Cursor              ="/SteamOrganizer;component/Resources/split.cur"
                    GiveFeedback        ="MenuExpanderOnGiveFeedback"
                    MouseLeftButtonDown ="MenuExpanderOnLeftMouseDown"
                    MouseEnter          ="MenuExpanderOnMouseEnter"
                    MouseLeave          ="MenuExpanderOnMouseLeave">
                <Rectangle Fill="{DynamicResource PrimarySubBrush}"
                           Height="45" Width="5"
                           Visibility="Collapsed"
                           RadiusY="3"
                           RadiusX="3"
                           Margin="3 0 0 0">
                </Rectangle>
            </Border>

            <TextBlock x:Name="text" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" Text="Test">
                
            </TextBlock>

            <!-- Top panel -->
            <DockPanel Margin="20 0 20 0" Grid.ColumnSpan="2">
                
                <Rectangle RadiusY="50" RadiusX="50"  
                           MouseLeftButtonDown="OnCloseWindow"
                           Cursor="Hand"
                           Height="12" Width="12"
                           Fill="#EC6A5D" 
                           Margin="0 0 7 0"/>
                
                <Rectangle RadiusY="50" RadiusX="50"
                           MouseLeftButtonDown="OnMaximizeWindow"
                           Cursor="Hand"
                           Width="12" Height="12"
                           Fill="#F2C14B"
                           Margin="0 0 7 0"/>

                <Rectangle RadiusY="50" RadiusX="50"
                           MouseLeftButtonDown="OnMinimizeWindow"
                           Cursor="Hand"
                           Width="12" Height="12"
                           Fill="#62C254"/>


                <StackPanel DockPanel.Dock="Right"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">

                    <Button Style="{StaticResource FlatButton}"  
                        Margin="0 0 20 0"
                        Click="OnNotificationPopup">
                        <Icon:PackIconMaterial Kind="Bell"/>
                    </Button>

                    <Button Style="{StaticResource SpinButton}" 
                        Command="{Binding SettingsCommand}">
                        <Icon:PackIconMaterial Kind="Cog"/>
                    </Button>
                </StackPanel>

                <!-- Local logged user info -->
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                    <StackPanel.Resources>

                        <Ellipse x:Key="LoggedInAvatar"
                                 Width="40" Height="40" StrokeThickness="4.5"
                                 StrokeDashArray="11" StrokeDashCap="Round"
                                 Stroke="{DynamicResource LightBlueGrad}">
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="{Binding LoggedInImage}"/>
                            </Ellipse.Fill>
                        </Ellipse>

                        <Icon:PackIconMaterial x:Key="NotLoggedIn" Kind="AccountCircle"
                                           Width="27" Height="27"
                                           VerticalAlignment="Center"
                                           Foreground="{DynamicResource LightBlueGrad}"/>
                    </StackPanel.Resources>

                    <ToggleButton 
                        Style="{StaticResource DynamicContentButton}"
                        IsHitTestVisible="False"
                        IsChecked="{Binding LoggedInImage,Converter={StaticResource ToBooleanConverter}}" 
                        Tag="{StaticResource LoggedInAvatar}"
                        Content="{StaticResource NotLoggedIn}"/>

                    <TextBlock VerticalAlignment="Center"
                               Margin="10 0 0 0"
                               FontWeight="Medium"
                               FontSize="15"
                               Foreground="{DynamicResource PrimaryForegroundBrush}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Text" Value="{Binding LoggedInNickname}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding LoggedInNickname}" Value="{x:Null}">
                                        <Setter Property="Text" Value="{DynamicResource mwv_notlogged}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>

            </DockPanel>

            <ext:BuiltInPopup x:Name="PopupWindow" Grid.ColumnSpan="2" Grid.RowSpan="2" 
                              CornerRadius="{Binding ElementName=MainBorder,Path=CornerRadius}"/>

        </Grid>
    </Border>
</Window>
