<Window  x:Class="SteamOrganizer.MVVM.View.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:ext="clr-namespace:SteamOrganizer.MVVM.View.Extensions"
        xmlns:viewModels="clr-namespace:SteamOrganizer.MVVM.ViewModels"
        xmlns:config="clr-namespace:SteamOrganizer.Storages"
        mc:Ignorable="d" 
        WindowStartupLocation="CenterScreen"
        Title="Steam Organizer"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        WindowState="Normal"
        MinHeight="553" MinWidth="1050" 
        Height="553" Width="0"
        Closing="Window_Closing"
        d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel}">
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="1"/>
    </WindowChrome.WindowChrome>


    <Border x:Name="MainBorder" Background="{DynamicResource PrimaryBackgroundBrush}" d:CornerRadius="9" >
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <ContentPresenter Grid.Column="1" 
                              Grid.Row="1"
                              Content="{Binding CurrentView, Mode=OneWay}"/>

            <TextBlock Text="Loading . . ."  
                       x:Name="Splash"
                       Grid.Column="1" 
                       Grid.Row="1"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       FontSize="55" FontWeight="Medium"
                       Foreground="{DynamicResource BackgroundGrad}"/>

            <!--#region Notifications popup -->
            
            <Popup x:Name="Notifications"  Width="280" 
                  StaysOpen="False" AllowsTransparency="True"
                   PopupAnimation="Slide" VerticalOffset="5">
                <Border Effect="{StaticResource LightShadow}" Margin="3" 
                    CornerRadius="3" 
                    Background="{DynamicResource SecondaryBackgroundBrush}">
                    <StackPanel>
                        <ListBox x:Name="NotificationsList" 
                             Background="Transparent"
                             VirtualizingPanel.CacheLengthUnit="Item"
                             VirtualizingPanel.CacheLength="1,1" VirtualizingPanel.ScrollUnit="Pixel"
                             VirtualizingPanel.VirtualizationMode="Recycling"
                             MaxHeight="294"
                             ScrollViewer.CanContentScroll="True"
                             HorizontalContentAlignment="Stretch"
                             BorderThickness="0"
                             HorizontalAlignment="Left">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid MinHeight="70"  
                                      Cursor="Hand" Width="280"
                                      Background="Transparent">
                                        <Grid.InputBindings>
                                            <MouseBinding Gesture="LeftClick"
                                            Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}, Path=DataContext.NotificationInvokeCommand,Mode=OneTime}"
                                            CommandParameter="{Binding}" />
                                        </Grid.InputBindings>

                                        <Icon:PackIconMaterial Kind="{Binding Icon}" 
                                                           Width="20" Height="20"
                                                           VerticalAlignment="Center"
                                                           Margin="10" Foreground="{DynamicResource LightBlueGrad}"/>
                                        <TextBlock Text="{Binding Message}" 
                                               Margin="40 10 35 10" TextWrapping="Wrap"
                                               VerticalAlignment="Center"
                                               Foreground="{DynamicResource SecondaryForegroundBrush}"/>

                                        <Button Style="{StaticResource FlatButton}" 
                                            VerticalAlignment="Top" 
                                            HorizontalAlignment="Right"
                                            Margin="0 5 15 0" Width="12" Height="12"
                                            Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}, Path=DataContext.NotificationRemoveCommand,Mode=OneTime}"
                                            CommandParameter="{Binding}">
                                            <Icon:PackIconMaterial Kind="Close" Height="8" Width="8"/>
                                        </Button>

                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListBoxItem">
                                                <Border x:Name="border" BorderThickness="0 0 0 3" Background="Transparent"
                                                BorderBrush="{DynamicResource PrimaryBackgroundBrush}">
                                                    <ContentPresenter/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="border" Property="Background" Value="#25263e"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                        <Button Style="{StaticResource FlatButton}"
                                Visibility="{Binding ElementName=NotificationsList,Path=Items.Count, Converter={StaticResource ToVisibilityConverter}}"
                                Padding="0 12 0 14"
                                Content="{DynamicResource mwv_hide_notif}"
                                Command="{Binding NotificationClearAll}"
                                FontWeight="Medium" />

                        <StackPanel Margin="0 30 0 30"  HorizontalAlignment="Center"
                              Visibility="{Binding ElementName=NotificationsList,Path=Items.Count,Converter={StaticResource ToVisibilityInvertedConverter}}">

                            <Icon:PackIconMaterial Kind="BellCheck" Margin="0 0 0 10"
                                                   Width="40" Height="40"
                                                   HorizontalAlignment="Center"
                                                   Foreground="{DynamicResource PrimaryForegroundBrush}"/>

                            <TextBlock 
                                   Text="{DynamicResource mwv_no_notifs}" FontWeight="Bold"
                                   Foreground="{DynamicResource PrimaryForegroundBrush}"
                                   FontSize="18"/>

                        </StackPanel>

                    </StackPanel>
                </Border>
            </Popup>
            
            <!--#endregion-->

            <!--#region Left side menu -->
            
            <Border x:Name="Sidebar"
                    Width="200"
                    d:CornerRadius="0 0 0 9"
                    Background="{DynamicResource SecondaryBackgroundBrush}" 
                    Grid.Row="1"
                    BorderThickness="0 0 1.5 0"
                    BorderBrush="{DynamicResource PrimaryBorderBrush}">
                <StackPanel>
                    <RadioButton IsChecked="True"
                                 Command="{Binding AccountsCommand,Mode=OneTime}"
                                 Style="{StaticResource MenuRadioButton}"
                                 Tag="{DynamicResource word_accs}">
                        <Icon:PackIconMaterial Kind="AccountGroupOutline" Height="23" Width="23" />
                    </RadioButton>

                    <RadioButton  Style="{StaticResource MenuRadioButton}" 
                                  Command="{Binding RemoteControlCommand,Mode=OneTime}"
                                  Tag="{DynamicResource word_rmtControl}">
                        <Icon:PackIconMaterial Kind="RemoteDesktop" Height="23" Width="23" />
                    </RadioButton>
                </StackPanel>
            </Border>

            <Border Background          ="Transparent"
                    Grid.Column         ="1" Grid.Row="1"
                    MinWidth            ="8"
                    HorizontalAlignment ="Left"
                    Cursor              ="/SteamOrganizer;component/Resources/split.cur"
                    GiveFeedback        ="MenuExpanderOnGiveFeedback"
                    MouseLeftButtonDown ="MenuExpanderOnLeftMouseDown"
                    MouseEnter          ="MenuExpanderOnMouseEnter"
                    MouseLeave          ="MenuExpanderOnMouseLeave">
                <Rectangle Fill="{DynamicResource PrimarySubBrush}"
                           Height="45" Width="5"
                           Visibility="Collapsed"
                           RadiusY="3"
                           RadiusX="3"
                           Margin="3 0 0 0">
                </Rectangle>
            </Border>
            
            <!--#endregion-->

            <!--#region Top panel -->
            
            <Border x:Name="TopPanel" 
                    d:CornerRadius="9 9 0 0" 
                    Grid.ColumnSpan="2" 
                    BorderThickness="0 0 0 1.5"  
                    BorderBrush="{DynamicResource PrimaryBorderBrush}"
                    Background="{DynamicResource SecondaryBackgroundBrush}"
                    MouseLeftButtonDown="OnDragMove"/>

            <DockPanel Margin="20 0 20 0" Grid.ColumnSpan="2">

                <Rectangle RadiusY="50" RadiusX="50"  
                           MouseLeftButtonDown="OnCloseWindow"
                           Cursor="Hand"
                           Height="12" Width="12"
                           Fill="#EC6A5D" 
                           Margin="0 0 7 0"/>

                <Rectangle RadiusY="50" RadiusX="50"
                           MouseLeftButtonDown="OnMaximizeWindow"
                           Cursor="Hand"
                           Width="12" Height="12"
                           Fill="#F2C14B"
                           Margin="0 0 7 0"/>

                <Rectangle RadiusY="50" RadiusX="50"
                           MouseLeftButtonDown="OnMinimizeWindow"
                           Cursor="Hand"
                           Width="12" Height="12"
                           Fill="#62C254"/>


                <StackPanel DockPanel.Dock="Right"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">

                    <Icon:PackIconMaterial Margin="-30 0 0 0" Height="15" Width="15" Background="Transparent"
                                           VerticalAlignment="Center" ToolTipService.InitialShowDelay="250">
                        <Icon:PackIconMaterial.Style>
                            <Style TargetType="Icon:PackIconMaterial">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Setter Property="Spin" Value="False"/>
                                <Setter Property="Foreground" Value="{DynamicResource LightCyanGradient}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DatabaseSyncState,Mode=OneWay}" Value="{x:Static config:ESyncState.Processing}">
                                        <Setter Property="Kind" Value="Autorenew"/>
                                        <Setter Property="Spin" Value="True"/>
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Setter Property="ToolTip" Value="Saving changes..."/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding DatabaseSyncState,Mode=OneWay}" Value="{x:Static config:ESyncState.Partial}">
                                        <Setter Property="Kind" Value="CloudAlert"/>
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Setter Property="Foreground" Value="{DynamicResource WarningBrush}"/>
                                        <Setter Property="ToolTip" Value="The changes were saved locally, but an error occurred when synchronizing with the cloud"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding DatabaseSyncState,Mode=OneWay}" Value="{x:Static config:ESyncState.Synchronized}">
                                        <Setter Property="Kind" Value="Check"/>
                                        <Setter Property="Foreground" Value="{DynamicResource SuccessGrad}"/>
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Setter Property="ToolTip" Value="All changes were successfully saved"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Icon:PackIconMaterial.Style>
                    </Icon:PackIconMaterial>

                    <Grid Margin="0 0 20 0">
                        <Button Style="{StaticResource FlatButton}"
                                Command="{Binding OpenNotificationsCommand,Mode=OneTime}"
                                CommandParameter="{Binding RelativeSource={RelativeSource Self},Mode=OneWay}">
                            <Icon:PackIconMaterial Kind="Bell"/>
                        </Button>
                        <Ellipse Fill="{DynamicResource ErrorBrush}"
                                 VerticalAlignment="Top"
                                 HorizontalAlignment="Right"
                                 Height="10" Width="10"
                                 Stroke="{DynamicResource SecondaryBackgroundBrush}"
                                 Margin="0 0 0 0">
                            <Ellipse.Style>
                                <Style TargetType="Ellipse">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsNotificationsRead,Mode=OneWay}" Value="False">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Ellipse.Style>
                        </Ellipse>
                    </Grid>


                    <Button Style="{StaticResource SpinButton}" 
                        Command="{Binding SettingsCommand,Mode=OneTime}">
                        <Icon:PackIconMaterial Kind="Cog"/>
                    </Button>

                </StackPanel>

                <!--#region Local logged user info -->

                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                    <StackPanel.Resources>

                        <Ellipse x:Key="LoggedInAvatar"
                                 Width="40" Height="40" StrokeThickness="4.5"
                                 StrokeDashArray="11" StrokeDashCap="Round"
                                 Stroke="{DynamicResource LightBlueGrad}">
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="{Binding LoggedInImage}"/>
                            </Ellipse.Fill>
                        </Ellipse>

                        <Icon:PackIconMaterial x:Key="NotLoggedIn" Kind="AccountCircle"
                                           Width="27" Height="27"
                                           VerticalAlignment="Center"
                                           Foreground="{DynamicResource LightBlueGrad}"/>
                    </StackPanel.Resources>

                    <ToggleButton 
                        Style="{StaticResource DynamicContentButton}"
                        IsHitTestVisible="False"
                        IsChecked="{Binding LoggedInImage,Converter={StaticResource ToBooleanConverter}}" 
                        Tag="{StaticResource LoggedInAvatar}"
                        Content="{StaticResource NotLoggedIn}"/>

                    <TextBlock VerticalAlignment="Center"
                               Margin="10 0 0 0"
                               FontWeight="Medium"
                               FontSize="15"
                               Foreground="{DynamicResource PrimaryForegroundBrush}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Text" Value="{Binding LoggedInNickname}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding LoggedInNickname}" Value="{x:Null}">
                                        <Setter Property="Text" Value="{DynamicResource mwv_notlogged}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>

                <!--#endregion-->

            </DockPanel>
            
            <!--#endregion-->


            <ext:BuiltInPopup x:Name="PopupWindow" 
                              Grid.ColumnSpan="2" 
                              Grid.RowSpan="2" 
                              CornerRadius="{Binding ElementName=MainBorder,Path=CornerRadius}"/>

            <Border x:Name="ContentSplash"
                    Grid.ColumnSpan="2"
                    Grid.RowSpan="2"
                    Visibility="Collapsed"
                     CornerRadius="{Binding ElementName=MainBorder, Path=CornerRadius,Mode=OneWay}"
                    Background="{DynamicResource PrimaryBackgroundBrush}"/>
        </Grid>
    </Border>
</Window>
