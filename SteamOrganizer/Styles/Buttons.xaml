<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks">
    <Style x:Key="TransparentButton" TargetType="Button">
        <Style.Resources>
            <CornerRadius x:Key="Corner" TopLeft="5" TopRight="5" BottomRight="5" BottomLeft="5"/>
        </Style.Resources>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TertiaryForegroundBrush}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Padding" Value="7 4 7 4"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{DynamicResource Corner}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FlatButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="3" Padding="{TemplateBinding Padding}" >
                        <ContentPresenter  VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource TertiaryForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SpinButton" TargetType="{x:Type Button}" BasedOn="{StaticResource FlatButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="50"
                                                RenderTransformOrigin="0.5 0.5">
                        <Border.RenderTransform>
                            <RotateTransform x:Name="SpinAngle" Angle="0"/>
                        </Border.RenderTransform>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SpinAngle"
                                                         Storyboard.TargetProperty="Angle"
                                                         To="180" Duration="0:0:0.7"
                                                         EasingFunction="{StaticResource BaseAnimationFunction}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SpinAngle"
                                                         Storyboard.TargetProperty="Angle"
                                                         To="0" Duration="0:0:0.7"
                                                         EasingFunction="{StaticResource BaseAnimationFunction}"/>

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CopyButton" TargetType="Button">
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Margin" Value="5 0 0 0"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{DynamicResource PrimarySubBrush}" BorderThickness="0" CornerRadius="4">
                        <Icon:PackIconMaterial x:Name="copyIco" Kind="ContentCopy" Foreground="{DynamicResource TertiaryForegroundBrush}" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                       Width="15" Height="15"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard  RepeatBehavior="2x">
                                        <DoubleAnimation Storyboard.TargetName="copyIco"
                                                             Storyboard.TargetProperty="Height" AutoReverse="True"
                                                             To="18" Duration="0:0:0.3"/>
                                        <DoubleAnimation Storyboard.TargetName="copyIco"
                                                             Storyboard.TargetProperty="Width" AutoReverse="True"
                                                             To="18" Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernSwitchToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBackgroundBrush}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Width" Value="52"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="7" 
                                    Height="13" Margin="10 0 0 0"
                                    Width="27" HorizontalAlignment="Left"
                                    VerticalAlignment="Center" >
                        </Border>
                        <Ellipse x:Name="Ellipse" Height="20" Width="20"
                                     HorizontalAlignment="Left" VerticalAlignment="Center"
                                     Fill="{DynamicResource SecondaryForegroundBrush}"
                                     Stroke="{TemplateBinding BorderBrush}"
                                     StrokeThickness="4"/>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="26 0 0 0"
                                                            Duration="0:0:0.2">
                                            <ThicknessAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseIn"/>
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>
                                        <ColorAnimation  Storyboard.TargetName="Border"  Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                         Duration="0:0:0.2" To="{DynamicResource SecondarySubColor}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="0 0 0 0"
                                                            Duration="0:0:0.2">
                                            <ThicknessAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseIn"/>
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Ellipse" Property="Fill" Value="{DynamicResource TertiaryForegroundBrush}"/>
                            <Setter TargetName="Ellipse" Property="Stroke" Value="{DynamicResource PurpleGradient}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>